{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport styles from './CreateArticle.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport de from 'javascript-time-ago/locale/de';\nimport { useJwt } from \"react-jwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"food-token\");\n\nconst CreateArticle = ({\n  data,\n  addNewArticle,\n  deleteArticle,\n  updateArticle\n}) => {\n  _s();\n\n  const {\n    decodedToken,\n    isExpired\n  } = useJwt(token);\n  TimeAgo.addDefaultLocale(de);\n  useEffect(() => {}, [data]);\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  /*  const [createDate, setCreateDate] = useState(Number); */\n\n  const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n  const [idToEdite, setIdToEdite] = useState('');\n\n  const fileChangeHandler = event => {\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(event.target.files[0]);\n\n    fileReader.onloadend = () => {\n      let [file] = event.target.files;\n\n      if (file) {\n        setPreviewImageSrc(URL.createObjectURL(file));\n      }\n\n      const base64ImageUrl = fileReader.result; //console.log('base64Image', base64ImageUrl);\n\n      setFile(base64ImageUrl);\n    };\n  };\n\n  const handleAddSubmit = event => {\n    event.preventDefault();\n    console.log('handle add submit');\n    const newArticle = {\n      title: title,\n      text: text,\n      image: file\n    };\n    addNewArticle(newArticle);\n    setTitle('');\n    setText('');\n    setPreviewImageSrc('');\n  };\n\n  const handleEditeSubmit = event => {\n    event.preventDefault();\n    console.log('handleEditeSubmit=> ');\n    const UpditeArticle = {\n      title: title,\n      text: text,\n      image: file\n    };\n    updateArticle(idToEdite, UpditeArticle);\n    setIdToEdite('');\n    setTitle('');\n    setText('');\n    setPreviewImageSrc('');\n    console.log(UpditeArticle);\n  };\n\n  const updateHandle = article => {\n    setTitle(article.title);\n    setText(article.text);\n    setIdToEdite(article._id);\n    /* setCreateDate(article.createDate) */\n  };\n\n  const convertToCamelCase = word => {\n    return word[0].toUpperCase() + word.slice(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: `${styles.container} container`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Add or Edit an new Article\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"g-6\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: idToEdite ? handleEditeSubmit : handleAddSubmit,\n          children: [previewImageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.imageCreate,\n            src: previewImageSrc,\n            alt: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 44\n          }, this) : null, /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: styles.inputText,\n              type: \"text\",\n              placeholder: \"Enter your Title\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"Text\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              className: styles.inputTextArea,\n              rows: 3,\n              placeholder: \"Enter your Text\",\n              value: text,\n              onChange: e => setText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.addPhotoBtn,\n              variant: \"outline-primary\",\n              children: [\"Add Photo\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: styles.inputFile,\n                type: \"file\",\n                name: \"file\",\n                onChange: fileChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.editDeleteButtons,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: styles.btnWidth,\n              variant: \"outline-success\",\n              type: \"submit\",\n              children: idToEdite ? 'Edite' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"articles\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: styles.btnWidth,\n                variant: \"outline-dark\",\n                children: \"Back to Articles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"g-6\",\n        children: data.map(article => {\n          console.log(\"article in createArticle: \", article);\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.cardCreateArt,\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              className: styles.imgArt,\n              variant: \"top\",\n              src: article.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: article.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.containerUserImageAndName,\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  className: styles.imgUser,\n                  variant: \"top\",\n                  src: article.userId.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: convertToCamelCase(article.userId.firstName) + ' ' + convertToCamelCase(article.userId.lastName)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                  date: article.createDate,\n                  locale: \"de-De\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-style\",\n                children: article.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), decodedToken.firstName === article.userId.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.editDeleteButtons,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: styles.btnWidth,\n                  variant: \"outline-primary\",\n                  onClick: () => updateHandle(article),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: styles.btnWidth,\n                  variant: \"outline-danger\",\n                  onClick: () => deleteArticle(article._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, article._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateArticle, \"h8qb6Q3VTcxpqvfz1PZQj0iZuVU=\", false, function () {\n  return [useJwt];\n});\n\n_c = CreateArticle;\nexport default CreateArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArticle\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js"],"names":["Container","Form","Button","Card","Col","Row","styles","useState","useEffect","Link","TimeAgo","ReactTimeAgo","de","useJwt","token","localStorage","getItem","CreateArticle","data","addNewArticle","deleteArticle","updateArticle","decodedToken","isExpired","addDefaultLocale","title","setTitle","text","setText","file","setFile","previewImageSrc","setPreviewImageSrc","idToEdite","setIdToEdite","fileChangeHandler","event","fileReader","FileReader","readAsDataURL","target","files","onloadend","URL","createObjectURL","base64ImageUrl","result","handleAddSubmit","preventDefault","console","log","newArticle","image","handleEditeSubmit","UpditeArticle","updateHandle","article","_id","convertToCamelCase","word","toUpperCase","slice","container","imageCreate","inputText","e","value","inputTextArea","addPhotoBtn","inputFile","editDeleteButtons","btnWidth","map","cardCreateArt","imgArt","containerUserImageAndName","imgUser","userId","firstName","lastName","createDate"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport styles from './CreateArticle.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport de from 'javascript-time-ago/locale/de';\nimport { useJwt } from \"react-jwt\";\nconst token = localStorage.getItem(\"food-token\")\n\n\n\n\nconst CreateArticle = ({ data, addNewArticle, deleteArticle, updateArticle }) => {\n    const { decodedToken, isExpired } = useJwt(token);\n\n    TimeAgo.addDefaultLocale(de);\n\n\n    useEffect(() => {\n\n\n\n    }, [data])\n\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [file, setFile] = useState(null);\n    /*  const [createDate, setCreateDate] = useState(Number); */\n\n    const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n\n    const [idToEdite, setIdToEdite] = useState('');\n\n    const fileChangeHandler = (event) => {\n        let fileReader = new FileReader();\n        fileReader.readAsDataURL(event.target.files[0])\n        fileReader.onloadend = () => {\n\n            let [file] = event.target.files;\n            if (file) {\n                setPreviewImageSrc(URL.createObjectURL(file))\n            }\n\n            const base64ImageUrl = fileReader.result;\n            //console.log('base64Image', base64ImageUrl);\n\n            setFile(base64ImageUrl)\n        }\n    }\n\n    const handleAddSubmit = (event) => {\n\n        event.preventDefault();\n        console.log('handle add submit')\n        const newArticle = {\n            title: title,\n            text: text,\n            image: file,\n\n        }\n        addNewArticle(newArticle)\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n    }\n    const handleEditeSubmit = (event) => {\n        event.preventDefault();\n        console.log('handleEditeSubmit=> ')\n\n        const UpditeArticle = {\n            title: title,\n            text: text,\n            image: file\n        }\n        updateArticle(idToEdite, UpditeArticle)\n        setIdToEdite('')\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n        console.log(UpditeArticle)\n\n    }\n\n    const updateHandle = (article) => {\n        setTitle(article.title);\n        setText(article.text);\n        setIdToEdite(article._id);\n        /* setCreateDate(article.createDate) */\n    }\n\n    const convertToCamelCase = (word) => {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return (\n        <Container className={`${styles.container} container`}>\n            <h2 className='text-center'>Add or Edit an new Article</h2>\n            <Row>\n                <Col className='g-6'>\n                    <Form onSubmit={idToEdite ? handleEditeSubmit : handleAddSubmit} >\n                        {previewImageSrc ? <img className={styles.imageCreate} src={previewImageSrc} alt=\"test\" /> : null}\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            {/* <Form.Label>Title</Form.Label> */}\n                            <Form.Control\n                                className={styles.inputText}\n                                type=\"text\"\n                                placeholder=\"Enter your Title\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"Text\">\n\n                            <Form.Control as=\"textarea\"\n                                className={styles.inputTextArea}\n                                rows={3}\n                                placeholder=\"Enter your Text\"\n                                value={text}\n                                onChange={(e) => setText(e.target.value)}\n\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n\n                            <Button className={styles.addPhotoBtn}\n                                variant=\"outline-primary\"\n                            >\n\n                                Add Photo\n                                <Form.Control\n                                    className={styles.inputFile}\n                                    type=\"file\"\n                                    name='file'\n                                    onChange={fileChangeHandler}\n\n                                />\n                            </Button>\n                        </Form.Group>\n\n                        <div className={styles.editDeleteButtons}>\n                            <Button className={styles.btnWidth} variant=\"outline-success\" type=\"submit\"\n\n                            >\n                                {idToEdite ? 'Edite' : 'Add'}\n\n\n\n                            </Button>\n                            <Link to='articles'>\n                                <Button className={styles.btnWidth} variant=\"outline-dark\">Back to Articles</Button>\n                            </Link>\n                        </div>\n\n\n                    </Form>\n                </Col>\n\n                <Col className='g-6'>\n                    {data.map(article => {\n\n                        console.log(\"article in createArticle: \", article)\n                        return (\n\n                            <Card key={article._id} className={styles.cardCreateArt}>\n                                <Card.Img className={styles.imgArt} variant=\"top\" src={article.image} />\n                                <Card.Body>\n                                    <Card.Title>{article.title}</Card.Title>\n                                    <div className={styles.containerUserImageAndName}>\n                                        <Card.Img className={styles.imgUser} variant=\"top\" src={article.userId.image} />\n                                        <Card.Text>\n                                            {\n                                                convertToCamelCase(article.userId.firstName) + ' ' +\n                                                convertToCamelCase(article.userId.lastName)\n                                            }\n\n                                        </Card.Text>\n                                    </div>\n\n\n                                    <Card.Text>\n                                        <ReactTimeAgo date={article.createDate} locale=\"de-De\" />\n\n                                    </Card.Text>\n\n                                    <Card.Text className='text-style'>\n                                        {article.text}\n                                    </Card.Text>\n                                    {decodedToken.firstName === article.userId.firstName && (\n\n                                        <div className={styles.editDeleteButtons}>\n                                            <Button className={styles.btnWidth} variant=\"outline-primary\"\n                                                onClick={() => updateHandle(article)}\n                                            >\n                                                Edit\n                                            </Button>\n                                            <Button className={styles.btnWidth} variant=\"outline-danger\"\n                                                onClick={() => deleteArticle(article._id)}\n                                            >\n                                                Delete\n                                            </Button>\n                                        </div>\n                                    )}\n\n                                </Card.Body>\n                            </Card>\n\n                        )\n                    })}\n                </Col>\n            </Row>\n\n\n        </Container>\n    )\n}\n\nexport default CreateArticle;"]},"metadata":{},"sourceType":"module"}