{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport styles from \"./SearchBar.module.scss\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar({\n  placeholder,\n  data\n}) {\n  _s();\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const handleFilter = event => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = data.filter(value => {\n      return value.recipe.label.toLowerCase().includes(searchWord.toLowerCase());\n    });\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n\n  const clearInput = () => {\n    setWordEntered(\"\");\n    setFilteredData([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchInputs,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"lg\",\n        type: \"text\",\n        className: styles.SearchRecipe,\n        value: wordEntered,\n        placeholder: placeholder,\n        onChange: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredData.length === 0 ? /*#__PURE__*/_jsxDEV(BsSearch, {\n          className: styles.searchIcon,\n          id: \"searchIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n          className: styles.searchIcon,\n          id: \"closeIcon\",\n          onClick: clearInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: data.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          className: styles.col,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            className: styles.cardBody,\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.recipe.image,\n              className: styles.recipeImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: styles.cardTitle,\n                children: item.recipe.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: styles.cardText,\n                children: item.recipe.healthLabels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ReadMore/${item.recipe.uri.slice(item.recipe.uri.indexOf(\"_\") + 1)} `,\n                state: {\n                  url: \"testus\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: styles.readMore,\n                  children: \"Read more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"33ofi4ptmyQ7yvQ8YqRETBCPbkQ=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js"],"names":["React","useState","BsSearch","AiOutlineCloseCircle","Card","Col","Row","Form","styles","Button","Container","Link","SearchBar","placeholder","data","filteredData","setFilteredData","wordEntered","setWordEntered","handleFilter","event","searchWord","target","value","newFilter","filter","recipe","label","toLowerCase","includes","clearInput","searchInputs","SearchRecipe","length","searchIcon","map","item","key","col","width","cardBody","image","recipeImg","cardTitle","cardText","healthLabels","uri","slice","indexOf","url","readMore"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport styles from \"./SearchBar.module.scss\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\n\nfunction SearchBar({ placeholder, data }) {\n    const [filteredData, setFilteredData] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n\n\n\n    const handleFilter = (event) => {\n\n        const searchWord = event.target.value;\n        setWordEntered(searchWord);\n\n        const newFilter = data.filter((value) => {\n            return value.recipe.label.toLowerCase().includes(searchWord.toLowerCase())\n        });\n\n        if (searchWord === \"\") {\n            setFilteredData([]);\n        } else {\n            setFilteredData(newFilter);\n        }\n\n\n    };\n\n    const clearInput = () => {\n        setWordEntered(\"\");\n        setFilteredData([]);\n    };\n\n\n\n    return (\n\n\n        <Container >\n            {/*          <div className={styles.searchInputs}>\n                <Form.Control size=\"lg\"\n                    type=\"text\"\n                    className={styles.SearchRecipe}\n                    value={wordEntered}\n                    placeholder={placeholder} onChange={handleFilter} />\n\n                <div >\n                    {filteredData.length === 0 ? <BsSearch className={styles.searchIcon} id=\"searchIcon\" /> :\n                        <AiOutlineCloseCircle className={styles.searchIcon} id=\"closeIcon\"\n                            onClick={clearInput} />}\n                </div>\n            </div>\n            {filteredData.length !== 0 && (\n                <div className={styles.container}>\n                    <Row>\n                        {filteredData.slice(0, 12).map((value, key) => {\n                            return (\n                                <Col key={key} className={styles.col}>\n\n                                    <Card style={{ width: '18rem' }} className={styles.cardBody}>\n                                        <Card.Img variant=\"top\" src={value.recipe.image} className={styles.recipeImg} />\n                                        <Card.Body>\n                                            <Card.Title className={styles.cardTitle}>{value.recipe.label}</Card.Title>\n                                            <Card.Text className={styles.cardText}>\n                                                {value.recipe.healthLabels}\n                                            </Card.Text>\n\n                                            <Link\n                                                to={`/ReadMore/${value.recipe.uri.slice(value.recipe.uri.indexOf(\"_\") + 1)} `}\n                                                state={{ url: \"testus\" }}\n                                            >\n                                                <Button\n                                                    variant=\"success\"\n                                                    className={styles.readMore}\n\n                                                >Read more</Button>\n                                            </Link>\n\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </div>)} */}\n\n            <div className={styles.searchInputs}>\n                <Form.Control size=\"lg\"\n                    type=\"text\"\n                    className={styles.SearchRecipe}\n                    value={wordEntered}\n                    placeholder={placeholder} onChange={handleFilter} />\n\n                <div >\n                    {filteredData.length === 0 ? <BsSearch className={styles.searchIcon} id=\"searchIcon\" /> :\n                        <AiOutlineCloseCircle className={styles.searchIcon} id=\"closeIcon\"\n                            onClick={clearInput} />}\n                </div>\n            </div>\n\n\n            <Row>\n                {data.map((item, key) => {\n                    return (\n                        <Col key={key} className={styles.col}>\n\n                            <Card style={{ width: '18rem' }} className={styles.cardBody}>\n                                <Card.Img variant=\"top\" src={item.recipe.image} className={styles.recipeImg} />\n                                <Card.Body>\n                                    <Card.Title className={styles.cardTitle}>{item.recipe.label}</Card.Title>\n                                    <Card.Text className={styles.cardText}>\n                                        {item.recipe.healthLabels}\n                                    </Card.Text>\n\n                                    <Link\n                                        to={`/ReadMore/${item.recipe.uri.slice(item.recipe.uri.indexOf(\"_\") + 1)} `}\n                                        state={{ url: \"testus\" }}\n                                    >\n                                        <Button\n                                            variant=\"success\"\n                                            className={styles.readMore}\n\n                                        >Read more</Button>\n                                    </Link>\n\n\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    )\n                })}\n            </Row>\n\n        </Container >\n\n\n    )\n\n\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}