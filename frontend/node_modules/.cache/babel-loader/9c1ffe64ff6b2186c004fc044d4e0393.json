{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Recipes/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { BsSearch } from 'react-icons/bs';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card';\nimport recipesData from \"./recipesData.json\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport styles from \"./SearchBar.module.scss\";\nimport ReadMore from \"./ReadMore\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar({\n  placeholder,\n  data\n}) {\n  _s();\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const [dummyData, setDummyData] = useState([]);\n  useEffect(() => {\n    const getDummyData = async () => {\n      const appKey = '60f4a798c728f8f926b6a3563ac5c0ce';\n      const appId = 'ddab3a6f';\n      let food = [\"ice\", \"hotdog\", \"vegan\", \"hamburger\", \"soup\", \"pizza\", \"soup\", \"sweet\", \"salami\", \"rice\", \"meat\", \"fish\"];\n      const randomFood = Math.floor(Math.random() * food.length);\n      let word = food[randomFood];\n      const data = await axios.get(`https://api.edamam.com/search?q=${word}&app_id=${appId}&app_key=${appKey}&from=0&to=3&calories=591-722&health=alcohol-free`);\n      setDummyData(data.data);\n    };\n\n    getDummyData();\n  }, []);\n\n  const handleFilter = event => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = data.filter(value => {\n      return value.recipe.label.toLowerCase().includes(searchWord.toLowerCase());\n    });\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n\n  const clearInput = () => {\n    setWordEntered(\"\");\n    setFilteredData([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.searchInputs,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          type: \"text\",\n          className: styles.SearchRecipe,\n          value: wordEntered,\n          placeholder: placeholder,\n          onChange: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: filteredData.length === 0 ? /*#__PURE__*/_jsxDEV(BsSearch, {\n            className: styles.searchIcon,\n            id: \"searchIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n            className: styles.searchIcon,\n            id: \"closeIcon\",\n            onClick: clearInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), filteredData.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: filteredData.slice(0, 18).map((value, key) => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              className: styles.col,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: '18rem'\n                },\n                className: styles.cardBody,\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: value.recipe.image,\n                  className: styles.recipeImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    className: styles.cardTitle,\n                    children: value.recipe.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: styles.cardText,\n                    children: value.recipe.healthLabels\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ReadMore/${value.recipe.uri.slice(value.recipe.uri.indexOf(\"_\") + 1)} `,\n                    state: {\n                      url: \"testus\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"success\",\n                      className: styles.readMore\n                      /*     key={value.recipe.yield} \n                          data={recipesData} \n                          label={value.recipe.label} */\n                      ,\n                      children: \"Read more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"JtKrE4rtRXVqei3qk6zLzVk5BOo=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Recipes/SearchBar.js"],"names":["React","useState","useEffect","axios","BsSearch","AiOutlineCloseCircle","Card","recipesData","Col","Row","Form","styles","ReadMore","Button","Container","Link","SearchBar","placeholder","data","filteredData","setFilteredData","wordEntered","setWordEntered","dummyData","setDummyData","getDummyData","appKey","appId","food","randomFood","Math","floor","random","length","word","get","handleFilter","event","searchWord","target","value","newFilter","filter","recipe","label","toLowerCase","includes","clearInput","search","searchInputs","SearchRecipe","searchIcon","container","slice","map","key","col","width","cardBody","image","recipeImg","cardTitle","cardText","healthLabels","uri","indexOf","url","readMore"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport axios from \"axios\";\nimport { BsSearch } from 'react-icons/bs';\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card'\nimport recipesData from \"./recipesData.json\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport styles from \"./SearchBar.module.scss\"\n import ReadMore from \"./ReadMore\"; \nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport { Link } from 'react-router-dom';\n\n\nfunction SearchBar({ placeholder, data }) {\n    const [filteredData, setFilteredData] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n    const [dummyData, setDummyData] = useState([]);\n    \n    useEffect(() => {\n        const getDummyData = async ()=>{\n            const appKey = '60f4a798c728f8f926b6a3563ac5c0ce';\n            const appId = 'ddab3a6f';\n            let food = [\"ice\",\"hotdog\",\"vegan\",\"hamburger\",\"soup\",\"pizza\",\"soup\",\"sweet\",\"salami\",\"rice\",\"meat\",\"fish\"];\n            const randomFood =Math.floor(Math.random()*food.length);\n            let word = food[randomFood];\n            const data = await axios.get(`https://api.edamam.com/search?q=${word}&app_id=${appId}&app_key=${appKey}&from=0&to=3&calories=591-722&health=alcohol-free`)\n            setDummyData(data.data)\n        }\n        getDummyData();\n    },[])\n\n\n    const handleFilter = (event) => {\n        \n        const searchWord = event.target.value;\n         setWordEntered(searchWord); \n         \n        const newFilter = data.filter((value) => {\n           \n            return value.recipe.label.toLowerCase().includes(searchWord.toLowerCase())\n        });\n        \n        if (searchWord === \"\") {\n            setFilteredData([]);\n        } else {\n           setFilteredData(newFilter); \n       } \n       \n         \n    };\n    \n    const clearInput = () => {\n     setWordEntered(\"\") ;\n         setFilteredData([]); \n    }; \n  \n\n    return (\n        <Container>\n        <div className={styles.search}>\n            <div className={styles.searchInputs}>\n            <Form.Control size=\"lg\"\n             type=\"text\" \n             className={styles.SearchRecipe}\n             value={wordEntered} \n             placeholder={placeholder} onChange={handleFilter} />\n               {/*  <input type=\"text\"\n                className=\"SearchRecipe\"\n                    value={wordEntered} \n                    placeholder={placeholder} onChange={handleFilter} /> */}\n                 <div >\n                    {filteredData.length === 0 ?   <BsSearch className={styles.searchIcon}id=\"searchIcon\" /> :\n                        <AiOutlineCloseCircle className={styles.searchIcon} id=\"closeIcon\"\n                            onClick={clearInput} /> }\n                </div> \n            </div>\n          {  filteredData.length !== 0 && (  \n                <div className={styles.container}>\n                    <Row>\n                        {filteredData.slice(0, 18).map((value, key) => {\n                            return (\n                                <Col key={key} className={styles.col}>\n                                   \n                                    <Card style={{ width: '18rem'}} className={styles.cardBody}>\n                                        <Card.Img variant=\"top\" src={value.recipe.image} className={styles.recipeImg}  />\n                                        <Card.Body>\n                                            <Card.Title className={styles.cardTitle}>{value.recipe.label}</Card.Title>\n                                            <Card.Text className={styles.cardText}>\n                                                {value.recipe.healthLabels}\n                                            </Card.Text>\n                                            \n                                            <Link \n                                                to={ `/ReadMore/${value.recipe.uri.slice(value.recipe.uri.indexOf(\"_\")+1)} `} \n                                                state= {{ url : \"testus\"}}\n                                            >\n                                            <Button\n                                            variant=\"success\"\n                                            className={styles.readMore}\n                                            /*     key={value.recipe.yield} \n                                                data={recipesData} \n                                                label={value.recipe.label} */\n                                            >Read more</Button>\n                                            </Link>\n                                            \n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </div> )} \n        </div>\n        </Container>\n    )\n\n\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}