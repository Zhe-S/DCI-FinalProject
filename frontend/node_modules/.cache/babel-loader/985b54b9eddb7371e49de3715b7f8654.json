{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport styles from './ReadMore.module.scss';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport diet from '../../../images/giphy.gif';\nimport Loading from \"../../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadMore = props => {\n  _s();\n\n  const params = useParams();\n  let history = useHistory();\n  const [readMoreData, setReadMoreData] = useState([]);\n  useEffect(() => {\n    console.log(\"props id\", params.id);\n    const urlId = params.id.trim();\n    const url = `https://api.edamam.com/api/recipes/v2/recipe_${urlId}?type=public&app_id=ddab3a6f&app_key=60f4a798c728f8f926b6a3563ac5c0ce`;\n    getReadMoreData(url);\n  }, [params]);\n\n  const getReadMoreData = url => {\n    try {\n      axios.get(url, {\n        app_id: 'ddab3a6f',\n        app_key: '60f4a798c728f8f926b6a3563ac5c0ce'\n      }).then(response => {\n        const data = response.data;\n        console.log(\"json data\", data.recipe.healthLabels);\n        setReadMoreData(data.recipe);\n      });\n    } catch (error) {\n      console.log(error);\n      alert(error + 'some error occured ');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: [styles.cardContainer, 'bg-light'].join(' '),\n    children: Object.keys(readMoreData).length !== 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: styles.col,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '25rem'\n          },\n          className: [styles.carding, 'bg-light'].join(' '),\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: readMoreData.image,\n            alt: \"\",\n            className: styles.imgrecipeLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: styles.title,\n              children: readMoreData.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: styles.ListGroup,\n              children: readMoreData.ingredients.map(item => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  variant: \"success\",\n                  children: item['text']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.btnDiv,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.box,\n                onClick: () => history.goBack(),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.name,\n                  children: \"Back to recipe search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: styles.iButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '25rem'\n          },\n          className: [styles.carding, 'bg-light'].join(' '),\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: diet,\n            alt: \"\",\n            className: styles.imgrecipeRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Health labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: styles.ListGroup,\n              children: readMoreData.healthLabels.map(value => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  variant: \"info\",\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadMore, \"KsPtZtefZAMfkjjET/4Y8Ug6sGo=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ReadMore;\nexport default ReadMore;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadMore\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js"],"names":["React","useState","useEffect","useParams","useHistory","axios","Container","styles","ListGroup","Card","Button","Row","Col","diet","Loading","ReadMore","props","params","history","readMoreData","setReadMoreData","console","log","id","urlId","trim","url","getReadMoreData","get","app_id","app_key","then","response","data","recipe","healthLabels","error","alert","cardContainer","join","Object","keys","length","col","width","carding","image","imgrecipeLeft","title","label","ingredients","map","item","btnDiv","box","goBack","name","iButton","imgrecipeRight","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport styles from './ReadMore.module.scss';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport diet from '../../../images/giphy.gif';\nimport Loading from \"../../Loading/Loading\";\n\nconst ReadMore = (props) => {\n\n    const params = useParams()\n    let history = useHistory();\n    const [readMoreData, setReadMoreData] = useState([])\n\n    useEffect(() => {\n        console.log(\"props id\", params.id)\n        const urlId = params.id.trim();\n\n        const url = `https://api.edamam.com/api/recipes/v2/recipe_${urlId}?type=public&app_id=ddab3a6f&app_key=60f4a798c728f8f926b6a3563ac5c0ce`\n        getReadMoreData(url)\n    }, [params])\n\n    const getReadMoreData = (url) => {\n        try {\n            axios.get(url, {\n                app_id: 'ddab3a6f',\n                app_key: '60f4a798c728f8f926b6a3563ac5c0ce',\n\n\n            })\n                .then((response) => {\n                    const data = response.data;\n                    console.log(\"json data\", data.recipe.healthLabels)\n                    setReadMoreData(data.recipe)\n                })\n        }\n        catch (error) {\n            console.log(error)\n            alert(error + 'some error occured ')\n        }\n\n    }\n\n    return (\n        <Container className={[styles.cardContainer,'bg-light'].join(' ')} >\n            {Object.keys(readMoreData).length !== 0 ?\n                <Row>\n                    <Col className={styles.col}>\n                        <Card style={{ width: '25rem' }} className={[styles.carding,'bg-light'].join(' ')}>\n                            <Card.Img variant=\"top\" src={readMoreData.image} alt=\"\" className={styles.imgrecipeLeft} />\n                            <Card.Body>\n                                <Card.Title className={styles.title}>{readMoreData.label}</Card.Title>\n                                <h4>Ingredients:</h4>\n                                <ListGroup className={styles.ListGroup}>{readMoreData.ingredients.map(item => {\n                                    return (\n                                        <ListGroup.Item variant='success'>{item['text']}</ListGroup.Item>\n                                    )\n                                })}\n                                </ListGroup>\n                                {/*   <Button variant=\"success\" className={styles.btnBack} onClick={() => history.goBack()}>Back to recipe search</Button> */}\n                                <div className={styles.btnDiv}>\n                                    <button className={styles.box} onClick={() => history.goBack()}>\n                                        <span className={styles.name}>Back to recipe search</span>\n                                        <i className={styles.iButton}></i>\n                                    </button>\n                                </div>\n                            </Card.Body>\n\n                        </Card>\n                    </Col>\n\n                    <Col>\n                        <Card style={{ width: '25rem' }} className={[styles.carding,'bg-light'].join(' ')}>\n                            <Card.Img variant=\"top\" src={diet}\n                                alt=\"\" className={styles.imgrecipeRight} />\n                            <Card.Body>\n                                <Card.Title>Health labels</Card.Title>\n\n                                <ListGroup className={styles.ListGroup} >{readMoreData.healthLabels.map(value => {\n                                    return (\n                                        <ListGroup.Item variant=\"info\">{value}</ListGroup.Item>\n                                    )\n                                })}\n                                </ListGroup>\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row> :\n                <Loading />\n            }\n        </Container>\n\n\n\n    )\n}\nexport default ReadMore;"]},"metadata":{},"sourceType":"module"}