[{"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/index.js":"1","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/App.js":"2","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/NavMenu.js":"3","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Articles.js":"4","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/Article/Article.js":"5","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js":"6","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js":"7","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/BmiPage.js":"8","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/BmiComponent/BmiComponent.js":"9","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Logout/Logout.js":"10","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/LogIn/LogIn.js":"11","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/Home.js":"12","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/ImageSlider.js":"13","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/SliderData.js":"14","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/imgApp.js":"15","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Register/Register.js":"16","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js":"17","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Footer/Footer.js":"18","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/Recipes/Recipes.js":"19","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js":"20","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/DonoutDiagram.js":"21","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/BarChart.js":"22","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js":"23","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/index.js":"24","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/App.js":"25","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/NavMenu.js":"26","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/Pages/BmiPage.js":"27","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/Pages/Articles.js":"28","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Footer/Footer.js":"29","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js":"30","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/Home.js":"31","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/Recipes/Recipes.js":"32","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js":"33","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Account/LogIn/LogIn.js":"34","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Account/Register/Register.js":"35","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/DonoutDiagram.js":"36","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/BarChart.js":"37","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/SliderData.js":"38","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/imgApp.js":"39","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/ImageSlider.js":"40","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/BmiComponent/BmiComponent.js":"41","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js":"42","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/Article/Article.js":"43","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js":"44","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js":"45","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Loading/Loading.js":"46","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Arrows/Arrows.js":"47","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Buttons/LikeBtn/LikeBtn.js":"48","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Buttons/RecipeBtn/RecipeBtn.js":"49","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/index.js":"50","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/App.js":"51","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/NavMenu.js":"52","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/Pages/BmiPage.js":"53","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js":"54","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Footer/Footer.js":"55","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/Pages/Articles.js":"56","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/Recipes/Recipes.js":"57","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/ReadMore/ReadMore.js":"58","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/Home.js":"59","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Account/LogIn/LogIn.js":"60","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Account/Register/Register.js":"61","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/BarChart.js":"62","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/DonoutDiagram.js":"63","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/SliderData.js":"64","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/ImageSlider.js":"65","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/imgApp.js":"66","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/BmiComponent/BmiComponent.js":"67","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Loading/Loading.js":"68","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/SearchBar/SearchBar.js":"69","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/Article/Article.js":"70","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/CreateArticle/CreateArticle.js":"71","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/AllArticles/AllArticles.js":"72","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Arrows/Arrows.js":"73","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Buttons/LikeBtn/LikeBtn.js":"74","/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Buttons/RecipeBtn/RecipeBtn.js":"75"},{"size":358,"mtime":1633701508813,"results":"76","hashOfConfig":"77"},{"size":1449,"mtime":1634549505357,"results":"78","hashOfConfig":"77"},{"size":4038,"mtime":1634549505369,"results":"79","hashOfConfig":"77"},{"size":4969,"mtime":1634634069486,"results":"80","hashOfConfig":"77"},{"size":2581,"mtime":1634634069486,"results":"81","hashOfConfig":"77"},{"size":8692,"mtime":1634634069486,"results":"82","hashOfConfig":"77"},{"size":5747,"mtime":1634634069486,"results":"83","hashOfConfig":"77"},{"size":178,"mtime":1633010216267,"results":"84","hashOfConfig":"77"},{"size":5314,"mtime":1634306836253,"results":"85","hashOfConfig":"77"},{"size":191,"mtime":1633080011315,"results":"86","hashOfConfig":"77"},{"size":4773,"mtime":1634634069486,"results":"87","hashOfConfig":"77"},{"size":13059,"mtime":1634564820096,"results":"88","hashOfConfig":"77"},{"size":1287,"mtime":1633946198010,"results":"89","hashOfConfig":"77"},{"size":646,"mtime":1634634096393,"results":"90","hashOfConfig":"77"},{"size":2451,"mtime":1634634096393,"results":"91","hashOfConfig":"77"},{"size":8940,"mtime":1634634069486,"results":"92","hashOfConfig":"77"},{"size":7886,"mtime":1634549505369,"results":"93","hashOfConfig":"77"},{"size":1033,"mtime":1634549505369,"results":"94","hashOfConfig":"77"},{"size":400,"mtime":1634549505369,"results":"95","hashOfConfig":"77"},{"size":3650,"mtime":1634549505369,"results":"96","hashOfConfig":"77"},{"size":1559,"mtime":1634549505369,"results":"97","hashOfConfig":"77"},{"size":1496,"mtime":1634549505369,"results":"98","hashOfConfig":"77"},{"size":5699,"mtime":1634549505369,"results":"99","hashOfConfig":"77"},{"size":358,"mtime":1633701508813,"results":"100","hashOfConfig":"101"},{"size":1602,"mtime":1636321679290,"results":"102","hashOfConfig":"101"},{"size":5102,"mtime":1636321679330,"results":"103","hashOfConfig":"101"},{"size":178,"mtime":1633010216267,"results":"104","hashOfConfig":"101"},{"size":5510,"mtime":1636321679330,"results":"105","hashOfConfig":"101"},{"size":3985,"mtime":1636321679294,"results":"106","hashOfConfig":"101"},{"size":8852,"mtime":1636321679330,"results":"107","hashOfConfig":"101"},{"size":10525,"mtime":1636321679294,"results":"108","hashOfConfig":"101"},{"size":346,"mtime":1636321679330,"results":"109","hashOfConfig":"101"},{"size":4238,"mtime":1636321679330,"results":"110","hashOfConfig":"101"},{"size":4759,"mtime":1636321679290,"results":"111","hashOfConfig":"101"},{"size":8865,"mtime":1636321679290,"results":"112","hashOfConfig":"101"},{"size":1559,"mtime":1634549505369,"results":"113","hashOfConfig":"101"},{"size":1496,"mtime":1634549505369,"results":"114","hashOfConfig":"101"},{"size":646,"mtime":1634634096393,"results":"115","hashOfConfig":"101"},{"size":2448,"mtime":1636321679326,"results":"116","hashOfConfig":"101"},{"size":1281,"mtime":1636321679294,"results":"117","hashOfConfig":"101"},{"size":5706,"mtime":1636321679294,"results":"118","hashOfConfig":"101"},{"size":3948,"mtime":1636321679330,"results":"119","hashOfConfig":"101"},{"size":2745,"mtime":1636321679290,"results":"120","hashOfConfig":"101"},{"size":6288,"mtime":1636321679290,"results":"121","hashOfConfig":"101"},{"size":10917,"mtime":1636321679294,"results":"122","hashOfConfig":"101"},{"size":1080,"mtime":1636321679326,"results":"123","hashOfConfig":"101"},{"size":465,"mtime":1636321679290,"results":"124","hashOfConfig":"101"},{"size":743,"mtime":1636321679294,"results":"125","hashOfConfig":"101"},{"size":279,"mtime":1636321679294,"results":"126","hashOfConfig":"101"},{"size":358,"mtime":1633701508813,"results":"127","hashOfConfig":"128"},{"size":1602,"mtime":1636321679290,"results":"129","hashOfConfig":"128"},{"size":5102,"mtime":1636321679330,"results":"130","hashOfConfig":"128"},{"size":178,"mtime":1633010216267,"results":"131","hashOfConfig":"128"},{"size":8852,"mtime":1636321679330,"results":"132","hashOfConfig":"128"},{"size":3985,"mtime":1636321679294,"results":"133","hashOfConfig":"128"},{"size":5510,"mtime":1636321679330,"results":"134","hashOfConfig":"128"},{"size":346,"mtime":1636321679330,"results":"135","hashOfConfig":"128"},{"size":4238,"mtime":1636321679330,"results":"136","hashOfConfig":"128"},{"size":10525,"mtime":1636321679294,"results":"137","hashOfConfig":"128"},{"size":4759,"mtime":1636321679290,"results":"138","hashOfConfig":"128"},{"size":8865,"mtime":1636321679290,"results":"139","hashOfConfig":"128"},{"size":1496,"mtime":1634549505369,"results":"140","hashOfConfig":"128"},{"size":1559,"mtime":1634549505369,"results":"141","hashOfConfig":"128"},{"size":646,"mtime":1634634096393,"results":"142","hashOfConfig":"128"},{"size":1281,"mtime":1636321679294,"results":"143","hashOfConfig":"128"},{"size":2448,"mtime":1636321679326,"results":"144","hashOfConfig":"128"},{"size":5706,"mtime":1636321679294,"results":"145","hashOfConfig":"128"},{"size":1080,"mtime":1636321679326,"results":"146","hashOfConfig":"128"},{"size":3948,"mtime":1636321679330,"results":"147","hashOfConfig":"128"},{"size":2745,"mtime":1636321679290,"results":"148","hashOfConfig":"128"},{"size":10917,"mtime":1636321679294,"results":"149","hashOfConfig":"128"},{"size":6288,"mtime":1636321679290,"results":"150","hashOfConfig":"128"},{"size":465,"mtime":1636321679290,"results":"151","hashOfConfig":"128"},{"size":743,"mtime":1636321679294,"results":"152","hashOfConfig":"128"},{"size":279,"mtime":1636321679294,"results":"153","hashOfConfig":"128"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"k0t9ia",{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12dhztk",{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mg3zxe",{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"233"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/index.js",[],["328","329"],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/App.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/NavMenu.js",["330"],"import styles from \"./NavMenu.module.scss\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport { useJwt } from \"react-jwt\";\n\n\n\nimport { NavLink } from 'react-router-dom';\nconst token = localStorage.getItem(\"food-token\")\nconst NavMenu = () => {\n    const { decodedToken, isExpired } = useJwt(token);\n    console.log({ decodedToken });\n    console.log(isExpired);\n\n    return (\n\n        <Navbar className={styles.Navbar} collapseOnSelect expand=\"lg\" bg=\"success\" variant=\"dark\">\n            <Container className={styles.navContainer} >\n                <Navbar.Brand className={[styles.appName, 'application'].join(' ')}>our application</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n\n                    <Nav className=\"me-auto\">\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/\">\n                            Home\n\n                        </Nav.Link>\n\n\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/nutrition-analysis\">\n                            Nutrition analysis\n\n                        </Nav.Link>\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/recipes\">\n                            Recipes\n                        </Nav.Link>\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/bmi\">\n                            BMI\n\n                        </Nav.Link>\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/articles\">\n                            Articles\n                        </Nav.Link>\n\n\n\n                    </Nav>\n\n\n                    {decodedToken ? (<Nav>\n\n                        <Nav.Link\n\n\n                            className={[styles.navItemLogin].join(' ')}\n                            as={NavLink}\n                            eventKey={1} to=\"/logout\"\n                            onClick={(e) => {\n                                localStorage.removeItem('food-token');\n                                window.location = '/'\n                            }}\n\n                        >Logout</Nav.Link>\n                        <Nav.Link className={styles.navLinkLogout}>\n                            <div className={styles.userImageDiv}>\n                                <img className={styles.image}\n                                    src={decodedToken.image} />\n                            </div>\n\n                        </Nav.Link>\n\n\n\n                    </Nav>) : (<Nav>\n\n\n                        <Nav.Link\n                            className={[styles.navItemLogin].join(' ')}\n\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/login\">\n                            Login\n                        </Nav.Link>\n\n\n\n\n                        <Nav.Link\n                            className={[styles.navItemLogin].join(' ')}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/register\">\n                            Register\n                        </Nav.Link>\n\n\n\n                    </Nav>)}\n\n\n\n\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n\n\n    )\n\n};\n\nexport default NavMenu;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Articles.js",["331","332","333","334"],"import CreateArticle from \"../../Articles/CreateArticle/CreateArticle\";\nimport Article from \"../../Articles/Article/Article\";\nimport AllArticles from \"../../Articles/AllArticles/AllArticles\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useJwt } from \"react-jwt\";\nimport { FaDoorClosed } from \"react-icons/fa\";\n\nconst token = localStorage.getItem(\"food-token\")\n\nconst Articles = () => {\n    const { decodedToken, isExpired } = useJwt(token);\n\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getArticlesData();\n    }, [])\n\n    useEffect(() => {\n        //onsole.log('article hat sich verändert', articles)\n\n\n    }, [articles])\n\n    const doesUserHaveArticle = async (articleId) => {\n        const getUrl = `http://localhost:3369/articles/userhasarticle/${articleId}`;\n        const data = await fetch(getUrl, {\n            method: 'GET',\n            headers: {\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            }\n        });\n        const res = await data.text();\n        // Wenn Article zu user gehört kommt \"authorized\"\n        if (res !== \"authorized\") {\n            /*  alert(\"verboten\") */\n        }\n    }\n\n    const getArticlesData = async () => {\n        const data = await fetch(\"http://localhost:3369/articles\");\n        const res = await data.json();\n\n        // console.log(\"articles in fetch\", res)\n        setArticles(res.reverse());\n        res.forEach(article => doesUserHaveArticle(article._id))\n        console.log(\"articles in articles Data: \", res)\n    }\n\n\n\n    const addNewArticle = async (newArticle) => {\n        console.time(\"Test\")\n        newArticle.userId = decodedToken.id;\n        setLoading(true)\n        const res = await fetch('http://localhost:3369/articles', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newArticle)\n        });\n        // TODO IF YOUR REALLY WANN RELOAD location.reload();\n\n        console.log(\"newArticle: \", newArticle);\n        const newArticleApi = await res.json();\n        console.log(\"newArticleApi: \", newArticleApi);\n        const upditArticle = [newArticleApi, ...articles]\n        setArticles(upditArticle)\n        console.timeEnd(\"Test\")\n        setLoading(false)\n\n\n    }\n\n    const deleteArticle = async (id) => {\n        const deleteUrl = `http://localhost:3369/articles/${id}`;\n        const res = await fetch(deleteUrl, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            }\n        });\n        const result = await res.json();\n        if (result.err) {\n            alert('This Article is not for you');\n        } else {\n            const articlesDeleteUpate = articles.filter(article => article._id !== id)\n            setArticles(articlesDeleteUpate);\n        }\n\n    }\n\n    const updateArticle = async (id, artUpdate) => {\n        const updateUrl = `http://localhost:3369/articles/${id}`;\n\n        const res = await fetch(updateUrl, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            },\n\n            body: JSON.stringify(artUpdate)\n\n        });\n\n        const result = await res.json();\n        if (result.err) {\n            alert('This Article is not for you');\n        }\n        console.log(result);\n        // const newArticleApi = await res.json();\n        // console.log('newArticleApi', newArticleApi)\n        // const ArticleUpdated = articles.map(article => article._id === id ? artUpdate : article);\n        // setArticles(ArticleUpdated)\n        // console.log(\"state set: \", articles)\n\n        getArticlesData();\n    }\n\n    /*     const getArticleById = (id) => {\n    \n            const article = articles.find(art => art._id === id);\n            console.log('article => ', article)\n            return article;\n        } */\n\n    return (\n        <div >\n            <Switch>\n                <Route path='/articles'>\n                    <AllArticles\n                        data={articles}\n\n                    />\n                </Route>\n\n                <Route path='/create-article'>\n\n                    <CreateArticle\n                        data={articles}\n\n                        addNewArticle={addNewArticle}\n                        deleteArticle={deleteArticle}\n                        updateArticle={updateArticle}\n                        doesUserHaveArticle={doesUserHaveArticle}\n                    />\n                </Route>\n\n\n                <Route path='/article/:title' component={Article}>\n                    {/*   <Article getArticleById={getArticleById} /> */}\n                </Route>\n\n            </Switch>\n\n\n        </div>\n    )\n}\nexport default Articles;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/Article/Article.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js",["335","336","337"],"import Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport styles from './CreateArticle.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport de from 'javascript-time-ago/locale/en';\n\nimport { useJwt } from \"react-jwt\";\nconst token = localStorage.getItem(\"food-token\");\n\n\nconst CreateArticle = ({ data, addNewArticle, deleteArticle, updateArticle, doesUserHaveArticle, loading }) => {\n    const { decodedToken, isExpired } = useJwt(token);\n\n    TimeAgo.addDefaultLocale(de);\n\n\n    useEffect(() => {\n\n\n\n    }, [data])\n\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [file, setFile] = useState(null);\n    /*  const [createDate, setCreateDate] = useState(Number); */\n\n    const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n\n    const [idToEdite, setIdToEdite] = useState('');\n\n    const fileChangeHandler = (event) => {\n        let fileReader = new FileReader();\n        fileReader.readAsDataURL(event.target.files[0])\n        fileReader.onloadend = () => {\n\n            let [file] = event.target.files;\n            if (file) {\n                setPreviewImageSrc(URL.createObjectURL(file))\n            }\n\n            const base64ImageUrl = fileReader.result;\n            //console.log('base64Image', base64ImageUrl);\n\n            setFile(base64ImageUrl)\n        }\n    }\n\n    const handleAddSubmit = (event) => {\n\n        event.preventDefault();\n\n        const newArticle = {\n            title: title,\n            text: text,\n            image: file,\n\n        }\n        addNewArticle(newArticle)\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n    }\n    const handleEditeSubmit = (event) => {\n        event.preventDefault();\n\n\n        const UpditeArticle = {\n            title: title,\n            text: text,\n            image: file\n        }\n        updateArticle(idToEdite, UpditeArticle)\n        setIdToEdite('')\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n\n\n    }\n\n    const updateHandle = (article) => {\n        setTitle(article.title);\n        setText(article.text);\n        setIdToEdite(article._id);\n        setPreviewImageSrc(article.image);\n        doesUserHaveArticle(article._id)\n        /* setCreateDate(article.createDate) */\n    }\n\n    const convertToCamelCase = (word) => {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return (\n        <Container className={`${styles.container} container`}>\n            <h2 className='text-center'>Add or Edit an new Article</h2>\n            {/* {loading ? \"loiading \" : \"Toll\"} */}\n            <Row>\n                <Col className='g-6'>\n                    <Form onSubmit={idToEdite ? handleEditeSubmit : handleAddSubmit} >\n                        <div className={styles.imageCreateDiv}>\n                            {previewImageSrc ? <img className={styles.imageCreate} src={previewImageSrc} alt=\"test\" /> : null}\n                        </div>\n                        <Button className={styles.addPhotoBtn}\n                            variant=\"outline-primary\"\n                        >\n\n                            Add Photo\n                            <Form.Control\n                                className={styles.inputFile}\n                                type=\"file\"\n                                name='file'\n                                onChange={fileChangeHandler}\n\n                            />\n                        </Button>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            {/* <Form.Label>Title</Form.Label> */}\n                            <Form.Control\n                                className={styles.inputText}\n                                type=\"text\"\n                                placeholder=\"Enter your Title\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"Text\">\n\n                            <Form.Control as=\"textarea\"\n                                className={styles.inputTextArea}\n                                rows={3}\n                                placeholder=\"Enter your Text\"\n                                value={text}\n                                onChange={(e) => setText(e.target.value)}\n\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                            {/*        <FaPlusCircle color=\"darkcyan\" size=\"20px\"\n                                className={styles.addPhotoBtn}\n\n                            /> */}\n\n\n                        </Form.Group>\n\n                        <div className={styles.editDeleteButtons}>\n                            <Button className={styles.addArticleBtn} variant=\"outline-success\" type=\"submit\"\n\n                            >\n                                {idToEdite ? 'Save' : 'Add'}\n\n\n\n                            </Button>\n                            <Link to='articles'>\n                                <Button className={styles.backBtn} variant=\"outline-dark\">Back to Articles</Button>\n                            </Link>\n                        </div>\n\n\n                    </Form>\n                </Col>\n\n                <Col className='g-6'>\n                    {data.map(article => {\n\n\n                        return (\n\n                            <Card key={article._id} className={styles.cardCreateArt}>\n\n                                <div className={styles.articleAndUserImages}>\n                                    <div className={styles.imgArticleDiv}>\n                                        <Card.Img className={styles.imgArticle} variant=\"top\" src={article.image} />\n\n                                    </div>\n\n                                    <div className={styles.containerDataUser}>\n                                        <div className={styles.imgUserDiv}>\n                                            <Card.Img className={styles.imgUser} variant=\"top\" src={article.userId.image} />\n                                        </div>\n                                        <Card.Text className={styles.textUser}>\n                                            {\n                                                convertToCamelCase(article.userId.firstName) + ' ' +\n                                                convertToCamelCase(article.userId.lastName)\n                                            }\n\n                                        </Card.Text>\n\n                                        <Card.Text className={styles.textTime}>\n                                            <ReactTimeAgo date={article.updatedAt} locale=\"en-En\" />\n\n                                        </Card.Text>\n                                    </div>\n\n\n                                </div>\n\n                                <Card.Body>\n                                    <Card.Title className={styles.titleArticle}>{article.title}</Card.Title>\n\n\n\n\n\n                                    <Card.Text >\n                                        {article.text}\n                                    </Card.Text>\n\n\n                                    <div className={styles.editDeleteButtons}>\n\n                                        <Button className={styles.btnEditeAndDelete} variant=\"outline-primary\"\n                                            onClick={() => updateHandle(article)}\n                                        >\n                                            Edit\n                                        </Button>\n                                        <Button className={styles.btnEditeAndDelete} variant=\"outline-danger\"\n                                            onClick={() => deleteArticle(article._id)}\n                                        >\n                                            Delete\n                                        </Button>\n                                    </div>\n\n\n\n                                </Card.Body>\n                            </Card>\n\n                        )\n                    })}\n                </Col>\n            </Row>\n\n\n        </Container>\n    )\n}\n\nexport default CreateArticle;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/BmiPage.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/BmiComponent/BmiComponent.js",["338","339","340","341","342","343","344"],"import styles from \"./BmiComponent.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { useState } from \"react\";\nimport { GiBodyHeight, GiConsoleController } from 'react-icons/gi';\nimport { GiWeight } from 'react-icons/gi';\n\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\n\nconst BmiComponent = () => {\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n\n  const [bmiResult, setBmiResult] = useState(20.0);\n\n  const [status, setStatus] = useState(\"\");\n\n  function calculateBMI() {\n    if (weight !== 0 && height !== 0 && weight !== \"\" && height !== \"\") {\n\n      let bmi = Number(weight / (height / 100) ** 2).toFixed(1);\n      setBmiResult(bmi);\n      console.log(bmi);\n      let bmiStatus = getStatus(bmi);\n      setStatus(bmiStatus);\n      setHeight(\"\");\n      setWeight(\"\");\n    }\n  }\n\n  function getStatus(bmi) {\n\n    console.log(typeof (status))\n    if (bmi < 18.5) return \"Underweight\";\n    else if (bmi >= 18.5 && bmi <= 24.9) return \"Normal\";\n    else if (bmi >= 25) return \"überweight\";\n    else return \"Obese\";\n  }\n\n  return (\n    <div className=\"container bg-light secondary\">\n\n      <h2 className=\"mb-4 text-center\">BMI Calculator</h2>\n\n      <div className={styles.inputsResponse}>\n\n\n        <Form>\n          <Row className={styles.rowIputs}>\n            <Form.Group\n              className={styles.inputItem}\n              as={Col}\n              controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Height (cm)\n\n                <GiBodyHeight className={styles.icon} />\n              </Form.Label>\n              <Form.Control\n\n                type=\"text\"\n                value={height}\n                onChange={(e) => setHeight(e.target.value)}\n\n              />\n            </Form.Group>\n\n            <Form.Group\n              className={styles.inputItem}\n              as={Col}\n              controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Weight (kg)\n                <GiWeight className={styles.icon} />\n              </Form.Label>\n              <Form.Control\n\n                type=\"text\"\n                value={weight}\n                onChange={(e) => setWeight(e.target.value)}\n\n              />\n            </Form.Group>\n          </Row>\n        </Form>\n      </div>\n\n      <div className={styles.btnDiv}>\n        <Button\n          variant=\"outline-success\"\n          className={styles.btnBmi}\n\n          type=\"submit\"\n          onClick={calculateBMI}\n        >\n          Calculate BMI\n        </Button>\n      </div>\n\n\n\n\n      <div className={styles.dark}>\n        <p className={styles.result}>\n          {bmiResult}\n\n        </p>\n      </div>\n\n\n      <Row className=\"justify-content-md-center\">\n\n        <Col style={status == \"Underweight\" || status == \"\" ? { color: \"orange\" } : { opacity: \"0.3\" }}>\n          <Card className={styles.card} style={{ width: '350px' }}>\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}> &lt; 18.5</span>\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Underweight</h3>\n              <Card.Text className={styles.cardtext}>\n              Your weight is very low in relation to your height. Ideally, you should gain some weight to stay healthy and productive in the long run. Read our tips on eating right to stay fit now.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col style={status == \"Normal\" || status == \"\" ? {} : { opacity: \"0.3\" }} >\n          <Card className={styles.card} style={{ width: '350px' }}>\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}>18.5 - 24.9</span>\n\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Normal weight</h3>\n              <Card.Text className={styles.cardtext}>\n              The BMI shows you a healthy ratio of height to weight. With a balanced diet and regular exercise, it stays that way in the long term. With just one click to the information for a healthy lifestyle.\n                <br />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col style={status == \"überweight\" || status == \"\" ? { color: \"darkred\" } : { opacity: \"0.3\" }}>\n          <Card className={styles.card} style={{ width: '350px' }}>\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}>&gt; 25</span>\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Obesity</h3>\n              <Card.Text className={styles.cardtext}>\n                25–30 OVERWEIGHT\n                According to your body mass index, you are overweight. This increases the risk of diseases such as B. Diabetes. On the way to less pounds, we support you with offers to lose weight.\n                <br />\n                <br />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n      </Row>\n\n    </div>\n  );\n};\n\nexport default BmiComponent;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Logout/Logout.js",[],["345","346"],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/LogIn/LogIn.js",["347"],"import Container from 'react-bootstrap/Container';\nimport { MdEmail } from \"react-icons/md\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\nimport styles from './LogIn.module.scss';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LogIn = () => {\n\n    const [isPasswordShown, setIsPasswordShown] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [errorMsg, setErrorMsg] = useState('');\n    const [active, setActive] = useState(false);\n\n\n    const togglePasswordVisiblity = () => {\n        setIsPasswordShown(!isPasswordShown)\n    }\n\n    const showError = () => {\n        setActive(true);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const user = {\n            email: email,\n            password: password\n        }\n\n\n        const res = await fetch('http://localhost:3369/users/login', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(user)\n\n        });\n        const jsonResponse = await res.json();\n        if (jsonResponse.error) {\n            setErrorMsg(jsonResponse.error);\n        }\n\n\n        if (jsonResponse.token) {\n            \n            const userJson = JSON.stringify(jsonResponse.user)\n            localStorage.setItem('food-token', jsonResponse.token)\n            //        localStorage.setItem('user', userJson)\n\n            window.location = '/';\n        }\n    }\n    return (\n        <Container className={styles.loginContainer}>\n            <div className={styles.appContainer}>\n\n\n                <div className={styles.boxContainer}>\n                    <div className={styles.topContainer}>\n                        <div className={styles.backDrop}></div>\n                        <div className={styles.headerContainer}>\n                            <h2 className={styles.headerText}>Welcome</h2>\n                            <h2 className={styles.headerText}>Login</h2>\n                            <h5 className={styles.smallText}>please sing-in to continue!</h5>\n                        </div>\n\n                    </div>\n                    <div className={styles.innerContainer}>\n\n\n                        <div className={styles.boxFormContainer}>\n\n                            <form onSubmit={handleSubmit}\n                                className={styles.formContainer} >\n\n                                <div className={styles.icons}>\n                                    <input className={styles.inputEmail}\n                                        type=\"email\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    <MdEmail className={styles.emailIcon} />\n                                </div>\n                                <div className={styles.icons}>\n                                    <input className={styles.inputPassword}\n\n                                        placeholder=\"password\"\n                                        value={password}\n                                        type={(isPasswordShown) ? \"text\" : \"password\"}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n\n                                    <i\n                                        className={styles.passwordIcon}\n                                        onClick={togglePasswordVisiblity}\n                                    >\n                                        {isPasswordShown ? <BsEyeSlash /> : <BsEye />}\n                                    </i>\n                                </div>\n\n                                {active ? <p className={styles.errorMsg}>{errorMsg}</p> : null}\n                                <button\n                                    className={styles.buttonLogin}\n                                    type=\"submit\"\n                                    onClick={showError}\n                                >\n                                    Login\n                                </button>\n                            </form>\n\n\n                            <div className={styles.notLogin}>\n                                <p className={styles.mutedLink}>don,t have an account?</p>\n                                <Link className={styles.boldLink} to='register'> register</Link>\n                            </div>\n\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n\n        </Container >\n\n    )\n\n}\n\n\nexport default LogIn;\n","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/Home.js",["348"],"import styles from \"./Home.module.scss\";\n\nimport React, { useState } from \"react\";\nimport ImageSlider from \"./ImageSlider\";\nimport { SliderData } from \"./SliderData\";\nimport ImgApp from \"./imgApp\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <div className={styles.title}>\n        <h1>Your Health. Your Decisions. Our Support.</h1>\n        <br />\n        <ul>\n          <li>Medical experts and passionate journalists</li>\n          <li>Thorough research and solid methodologies</li>\n          <li>Fresh and actionable insights written for you</li>\n        </ul>\n      </div>\n\n      <ImgApp />\n      <div className={styles.article}>\n        <div className={styles.articleContents}>\n          <h3>What Is The Keto Diet?</h3>\n          <br />\n          <ul>\n            <a href=\"#lession1\">\n              <li>What Is the Ketogenic Diet?</li>\n            </a>\n            <a href=\"#lession2\">\n              <li>Keto Diet Foods</li>\n            </a>\n            <a href=\"#lession3\">\n              <li>Benefits of a Keto Diet</li>\n            </a>\n            <a href=\"#lession4\">\n              <li>Risks of a Keto Diet</li>\n            </a>\n            <a href=\"#lession5\">\n              <li>Side Effects of a Keto Diet</li>\n            </a>\n            <a href=\"#lession6\">\n              <li>Sources</li>\n            </a>\n          </ul>\n        </div>\n        <div>\n          <p>\n            Gaining traction in recent years, the keto diet—also known as the\n            ketogenic diet—is a popular weight loss plan. It gets its name from\n            ketosis, a metabolic process that occurs when your body burns fat\n            rather than carbohydrates.\n          </p>\n        </div>\n\n        <div>\n          <div>\n            <section id = \"lession1\">\n              <h2 >What Is the Ketogenic Diet?</h2>\n              <div>\n                <p>\n                  The ketogenic diet is a high-fat, very-low-carbohydrate eating\n                  plan that aims to bring about weight loss by causing your body\n                  to enter a state of fat-burning ketosis. Although it’s become\n                  popular during the past decade or so as a weight loss\n                  strategy, it was originally designed 100 years ago as a way to\n                  reduce seizures in people with epilepsy.\n                </p>\n                <p>\n                  The keto diet not only promises weight loss, but also claims\n                  to reduce hunger and help balance blood sugar. However, it can\n                  be a difficult protocol to follow. “One of the cons of the\n                  keto diet is that it has very strict rules,” says Melissa\n                  Majumdar, a certified specialist in obesity and weight\n                  management and a bariatric coordinator at Emory University\n                  Hospital Midtown in Atlanta. “I don’t know anybody who would\n                  be able to follow this diet for a long period of time.” It’s\n                  also risky for people with certain health conditions.\n                </p>\n                <p>\n                  A keto diet is low enough in carbs and protein and high enough\n                  in fat to force the body to burn stored fat instead of\n                  consumed carbohydrates for energy. To trigger ketosis, a diet\n                  typically must contain a maximum of only 50 grams of\n                  carbohydrates per day. (A slice of whole-wheat bread, for\n                  example, contains about 15 grams of carbohydrates, and a\n                  medium banana contains about 29 grams of carbohydrates.)\n                  Overall, carbohydrates contribute fewer than 10% of calories\n                  in a keto diet. The remainder comes from fat (70% to 80% of\n                  daily calories) and protein (about 10% of daily calories or\n                  about ½ gram per pound of body weight).\n                </p>\n                <h3>What Is Ketosis?</h3>\n                <p>\n                Your body prefers to burn glucose-containing carbs for energy. When carbohydrate-sourced glucose is not available, your body burns fat instead. To use fat for energy, your liver converts fat to substances known as ketones and burns those instead of glucose. When this process occurs, your body is in a state of ketosis.\n                </p>\n                <p>\n                Because your body prefers to burn glucose rather than fat, it may resist shifting into ketosis and will not do so unless you adhere strictly to carbohydrate and protein limits. It can take a few days, sometimes longer, to achieve a state of ketosis, and you must continue to limit carbohydrates and protein strictly in order to stay in ketosis. “If you don’t follow the rules, you go out of ketosis,” says Majumdar, who is also a registered dietitian and spokesperson for the Academy of Nutrition and Dietetics.\n                </p>\n                <h3>Types of Keto Diets</h3>\n                <p>\n                Various types of diets call themselves keto diets. However, some would be more accurately described as “keto-ish” or low-carb diets because they’re too high in carbohydrates to induce ketosis regularly. True keto diets are very low in carbohydrates, high in fat and moderate in protein.\n                </p>\n                <p>\n                Well-known keto-style diets include the Atkins and South Beach diet. Other low-carb diets may claim to be keto diets, but unless they include fewer than 50 grams of carbohydrates daily and only a moderate amount of protein, they may not induce ketosis reliably. In addition to limiting carbohydrates, you have to make sure you avoid eating too much protein as well, because protein can interfere with ketosis.\n                </p>\n                \n              </div>\n            </section>\n\n            <section id = \"lession2\">\n              <h2>Keto Diet Foods</h2>\n              <div>\n                <p>\n                The best foods for the keto diet are those high in fat, low in carbohydrates and moderate in protein, such as:\n                </p>\n                <ul>\n                  <li>Avocados</li>\n                  <li>Eggs</li>\n                  <li>Fats, including oils like olive, palm and coconut, as well as butter and lard</li>\n                  <li>Fish and shellfish</li>\n                  <li>Low-carb, non-starchy vegetables, such as leafy greens</li>\n                  <li>Meat and poultry</li>\n                  <li>Cheese</li>\n                  <li>Nuts</li>\n                  <li>Olives</li>\n                  <li>Seeds</li>\n                  <li>Berries in very limited amounts (¼ cup), because they contain carbohydrates, although fewer than other fruits</li>\n                  <li>Dark chocolate and cocoa powder</li>\n                </ul>\n\n              </div>\n            </section>\n\n            <section id = \"lession3\">\n              <h2>Benefits of a Keto Diet</h2>\n              <div>\n                <p>\n                The main health benefits of a keto diet can include:\n                </p>\n                <p>\n                  <strong>Weight Loss &nbsp;</strong>\n                </p>\n                <p>\n                Some people do find that a keto diet helps them lose weight. However, what works for one person may not work for another. A comprehensive review of scientific evidence published in 2019 in the Journal of Clinical Lipidology looked at the effect of low-carbohydrate and very low-carbohydrate diets like keto on body weight and other factors. It found that keto-style diets are no better than other types of diets, such as low-fat diets, at bringing about long-term weight loss.\n                </p>\n                <p>\n                  <strong>Less Hunger  &nbsp;</strong>\n                </p>\n                <p>\n                There is some evidence that keto-type diets reduce hunger, according to the 2019 Journal of Clinical Lipidology review. The effect may be due to a shift in hunger hormones, such as ghrelin and leptin, as well as insulin. “The high fat content of the keto diet may also be satiating,” Majumdar says.\n                </p>\n                <p>\n                  <strong>Blood Sugar Control  &nbsp;</strong>\n                </p>\n                <p>\n                Eating fewer carbohydrates can lead your pancreas to secrete less insulin and can lower your blood sugar. This response can be helpful for people with prediabetes, insulin resistance or diabetes. “However, similar results have been shown with other kinds of diets that are easier to follow,” Majumdar says. What’s more, simply cutting down on carbohydrates (rather than drastically reducing them) can often improve blood sugar control, too.\n                </p>\n                <p>\n                  <strong>Lower Triglycerides &nbsp;</strong>\n                </p>\n                <p>\n                The keto diet may cause a drop in triglycerides, a type of fat found in your blood. High levels of triglycerides can increase the risk of heart attack and stroke. However, this reduction doesn’t hold up over time. A 2020 review in the journal Cureus found that while the keto diet led to decreases in triglycerides, as well as blood pressure, during the first six to 12 months after starting a keto diet, those effects disappeared after 12 months.\n                </p>\n\n              </div>\n            </section>\n\n            <section id = \"lession4\">\n              <h2>Risks of a Keto Diet</h2>\n              <div>\n\n                <p>\n                  <strong>High Saturated Fat &nbsp;</strong>\n                </p>\n                <p>\n                Most keto diets are high in foods that contain saturated fat, such as meat, butter, palm oil and coconut oil. Saturated fat can raise LDL (“bad”) cholesterol, which increases heart disease risk. The American Heart Association recommends limiting saturated fat to 5% to 6% of daily calories, or about 13 grams per day. (A 4-ounce hamburger patty contains 7 grams of saturated fat, and 1 ounce of cheddar cheese contains 6 grams of saturated fat.) Some studies even found an increase in all-cause mortality (death from various causes) in people following keto-type diets.\n                </p>\n                <p>\n                  <strong>Poor Diet Quality  &nbsp;</strong>\n                </p>\n                <p>\n                Because the keto diet leaves out or limits entire groups of healthy foods, such as most fruit, some types of vegetables, legumes, whole grains and dairy, it may not provide all the nutrients you need. “And because it tends to be low in fiber, it can cause constipation,” Majumdar says.\n                </p>\n                <p>\n                  <strong>Health Risks   &nbsp;</strong>\n                </p>\n                <p>\n                The keto diet may pose risks for people with various health conditions, including high blood pressure, heart disease, disordered eating, diabetes or kidney disease, according to Majumdar. “This is not a diet that individuals with any type of health condition should be doing on their own,” Majumdar says. “They should be followed by a medical professional or dietitian who can monitor them.”\n                </p>\n\n              </div>\n            </section>\n\n\n            <section id = \"lession5\">\n              <h2>Side Effects of a Keto Diet</h2>\n              <div>\n                <p>\n                Keto diet proponents tout the benefits of ketosis-fueled fat burning as a way to rid the body of excess stored fat. However, shifting fuel sources from glucose to fat can cause various unpleasant symptoms. According to Majumdar, ketosis symptoms, which are sometimes referred to as “the keto flu,” may include:\n                </p>\n                <ul>\n                  <li>Brain fog</li>\n                  <li>Confusion</li>\n                  <li>Constipation</li>\n                  <li>Dizziness</li>\n                  <li>Headache</li>\n                  <li>Irritability</li>\n                  <li>Loss of energy</li>\n                  <li>Mood swings</li>\n                  <li>Muscle cramps</li>\n                  <li>Nausea</li>\n                  <li>Trouble sleeping</li>\n                  <li>Vomiting</li>\n                </ul>\n\n              </div>\n            </section>\n\n          </div>\n        </div>\n\n        <p></p>\n      </div>\n\n      <ImageSlider slides={SliderData} />\n\n      <div className={styles.frontendbox}>\n        <div className={styles.box}>\n          <div className={styles.front}>Front</div>\n          <div className={styles.back}>Back</div>\n        </div>\n        <div className={styles.box}>\n          <div className={styles.front}>Front</div>\n          <div className={styles.back}>Back</div>\n        </div>\n        <div className={styles.box}>\n          <div className={styles.front}>Front</div>\n          <div className={styles.back}>Back</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/ImageSlider.js",["349"],"import React, {useState} from \"react\";\nimport { SliderData } from \"./SliderData\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\"\nimport styles from \"./Home.module.scss\"\n\nconst ImageSlider = ({slides}) => {\nconst [current, setCurrent] = useState(0)\nconst length = slides.length\n\nconst nextSlide = () => {\n    setCurrent(current === length - 1 ? 0: current +1 )\n}\nconst prevSlide = () => {\n    setCurrent(current === 0 ? length - 1: current -1 )\n}\nconsole.log(prevSlide)\n\nif (!Array.isArray(slides) || slides.length <=0) {\n    return null\n}\n\n\n    return (\n        <section className={styles.slider}>\n            <FaArrowAltCircleLeft className={styles.leftArrow} onClick={prevSlide} />\n            <FaArrowAltCircleRight className={styles.rightArrow} onClick={nextSlide}/>\n        {SliderData.map((slide, index) => {\n            return (\n                <div \n                className={index === current ? styles.slideActive : styles.slide} \n                key={index}\n                >\n                    {index === current && (\n\n                        <img src = {slide.image} alt ='travel image' className= {styles.image}/>\n                    )}\n                </div>\n            );\n        })}\n        </section>\n    )\n};\n\nexport default ImageSlider","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/SliderData.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Home/imgApp.js",["350","351"],"import styles from \"./imgApp.module.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Img1 from \"./Imgs/1.jpg\";\nimport Img2 from \"./Imgs/2.jpg\";\nimport Img3 from \"./Imgs/3.jpg\";\nimport Img4 from \"./Imgs/4.jpg\";\n\nfunction useInterval(callback, interval) {\n    useEffect(() => {\n        const start = new Date().getTime()\n        const I = setInterval(() => {\n            callback(new Date().getTime() - start)\n        }, interval)\n        return () => clearInterval(I)\n    }, [])\n}\n\nfunction useSlider(N, speed = 4000) {\n    const [slider, setSlider] = useState(0)\n    useInterval((diff) => {\n        setSlider(_ => Math.floor(diff / speed) % N)\n    }, 300)\n    return slider\n}\n\nfunction usePath(N, speed = 4000) {\n    const [slider, setSlider] = useState(0)\n    useInterval((diff) => {\n        setSlider(_ => Math.floor(diff / speed) % N)\n    }, 300)\n    return slider\n}\n\n\n\n\nconst imgs = [\n    {\n        img: Img1,\n        path: '/recipes'\n     \n    },\n    {\n        img: Img2,\n        path: '/nutrition-analysis'\n     \n    },\n    {\n        img: Img3,\n        path: '/bmi'\n     \n    },\n    {\n        img: Img4,\n        path: '/articles'\n     \n    }\n\n];\n\nconst ImgApp = () => {\n    const slider = useSlider(imgs.length)\n\n\n    return (\n        <div className={styles.scroller}>\n            <div\n                className={styles.inner}\n                style={{\n                    width: `${imgs.length * 100}%`,\n                    transform: `translateX(-${100 * slider / imgs.length}%)`\n                }}>\n\n                {imgs.map(src => {\n\n                    return (\n\n\n\n                        <Link to={src.path}\n\n                        >\n                            <div className={styles.containerSlider}>\n\n                                <p className={styles.text}>{src.title}</p>\n                                <img\n                                    className={styles.img}\n                                    style={{\n                                        width: `${100 / imgs.length}%`\n                                    }}\n                                    key={src}\n                                    alt=\"#\"\n                                    src={src.img}\n                                />\n                            </div>\n                        </Link>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\n\nexport default ImgApp","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Register/Register.js",["352","353"],"import Container from 'react-bootstrap/Container';\nimport styles from './Register.module.scss'\nimport { MdEmail } from \"react-icons/md\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\nimport { FaUser } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { React, useState } from 'react';\n\n\nconst Register = () => {\n\n    const [isPasswordShown, setIsPasswordShown] = useState(false);\n    const [isRepeatPasswordShown, setIsRepeatPasswordShown] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setlastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [file, setFile] = useState(null);\n    /* const [user, setUser] = useState([]); */\n    const [errorMsg, setErrorMsg] = useState('');\n    const [rightMsg, setRightMsg] = useState('');\n\n    const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n    const [active, setActive] = useState(false);\n\n\n    const togglePasswordVisiblity = () => {\n        setIsPasswordShown(!isPasswordShown);\n    }\n\n    const showError = () => {\n        setActive(true);\n    }\n\n    const fileChangeHandler = (event) => {\n        let fileReader = new FileReader();\n        fileReader.readAsDataURL(event.target.files[0])\n        fileReader.onloadend = () => {\n\n            let [file] = event.target.files;\n            if (file) {\n                setPreviewImageSrc(URL.createObjectURL(file))\n            }\n            const base64ImageUrl = fileReader.result;\n            setFile(base64ImageUrl)\n        }\n    }\n\n    const handleSubmitPassword = () => {\n\n        if (password !== passwordConfirm) {\n            setErrorMsg('The two passwords must be the same');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!handleSubmitPassword()) {\n            return false;\n        }\n        /*   let error = false; */\n        const newUser = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            image: file\n        }\n\n        const res = await fetch('http://localhost:3369/users', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newUser)\n\n        });\n\n        const jsonResponse = await res.text();\n\n        if (jsonResponse === 'es gibt schon den user oder die email') {\n            setErrorMsg('Email already exists!');\n        } else if (jsonResponse === 'es gibt schon den user oder die username') {\n            setErrorMsg('username already used!');\n        } else if (jsonResponse === 'Email war falsch') {\n            setErrorMsg('Write the Email correctly!');\n        } else if (jsonResponse === 'das Passwort ist nicht valide') {\n            setErrorMsg('Password should be at least 10 characters and contains one Capital letter ,one special letter like @&?$ etc!');\n        } else {\n\n            window.location = '/login';\n        }\n        /* setUser(newUser) */\n    }\n\n    return (\n        <Container\n            className={styles.container}\n        >\n\n            <div className={styles.appContainer}\n\n            >\n\n\n                <div className={styles.boxContainer}>\n\n                    <div className={styles.innerContainer}>\n\n\n                        <div className={styles.boxFormContainer}>\n\n                            <form onSubmit={handleSubmit}\n                                className={styles.formContainer} >\n\n                                <div className={styles.topContainer}>\n                                  \n\n\n                                    <div className={styles.headerContainer}>\n\n\n                                        <div className={styles.imageUserDiv} >\n\n\n                                            {previewImageSrc ? <img className={styles.imageUser} src={previewImageSrc} alt=\"test\" /> : null}\n                                        </div>\n\n                                        <div className={styles.box}></div>\n\n                                        <button className={styles.addFotoBtn} >\n                                            Add Photo\n                                            <input type=\"file\"\n                                                className={styles.btnFile}\n                                                onChange={fileChangeHandler}\n                                            />\n\n                                        </button>\n\n                                    </div>\n\n                                </div>\n\n                                <div className={styles.icons}>\n                                    <input type=\"text\" className={styles.inputText}\n                                        placeholder=\"Firstname\"\n                                        value={firstName}\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                    />\n                                    <FaUser className={styles.emailIcon} />\n                                </div>\n\n                                <div className={styles.icons}>\n                                    <input type=\"text\" className={styles.inputText}\n                                        placeholder=\"Lastname\"\n                                        value={lastName}\n                                        onChange={(e) => setlastName(e.target.value)}\n\n                                    />\n                                    <FaUser className={styles.emailIcon} />\n                                </div>\n                                <div className={styles.icons}>\n                                    <input className={styles.inputEmail}\n                                        type=\"email\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    <MdEmail className={styles.emailIcon} />\n                                </div>\n\n                                <div className={styles.icons}>\n                                    <input className={styles.inputPassword}\n                                        placeholder=\"password\"\n                                        type={(isPasswordShown) ? \"text\" : \"password\"}\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n\n                                    <i\n                                        className={styles.passwordIcon}\n                                        onClick={togglePasswordVisiblity}\n                                    >\n                                        {isPasswordShown ? <BsEyeSlash /> : <BsEye />}\n                                    </i>\n                                </div>\n\n                                <div className={styles.icons}>\n                                    <input className={styles.inputPassword}\n\n                                        placeholder=\"Confirm password\"\n                                        type={(isRepeatPasswordShown) ? \"text\" : \"password\"}\n                                        value={passwordConfirm}\n                                        onChange={(e) => setPasswordConfirm(e.target.value)}\n                                    />\n\n                                    <i\n                                        className={styles.passwordIcon}\n                                        onClick={() => setIsRepeatPasswordShown(!isRepeatPasswordShown)}\n                                    >\n                                        {isRepeatPasswordShown ? <BsEyeSlash /> : <BsEye />}\n                                    </i>\n                                </div>\n\n\n                                {active ? <p className={styles.errorMsg}>{errorMsg}</p> : null}\n\n                                <button className={styles.buttonRegister} type=\"submit\"\n                                    onClick={showError}\n                                >\n                                    Register\n                                </button>\n                            </form>\n\n                            <div className={styles.notRegister}>\n                                <p className={styles.mutedLink}>Don't have an account?</p>\n                                <Link className={styles.boldLink} to='login'> Login</Link>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n\n\n\n        </ Container>\n\n    )\n\n}\n\nexport default Register;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Footer/Footer.js",["354"],"\nimport styles from './Footer.module.scss'\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\n\n\nconst Footer = () => {\n    return (\n\n        <Container className={styles.footerContainer}>\n            <div className={styles.footerContainerDiv}>\n\n                <Card.Footer className=\"text-muted\" className={styles.footerText}>\n                    <span dangerouslySetInnerHTML={{ \"__html\": \"&copy;\" }} /> Copyright 2021</Card.Footer>\n                <ul className={styles.list}>\n                    <li><a href=\"http://facebook.com\"><i className=\"fab fa-facebook fa-3x\"></i></a> </li>\n                    <li><a href=\"http://github.com\"><i className=\"fab fa-github fa-3x\"></i></a></li>\n                    <li><a href=\"http://linkedin.com\"><i className=\"fab fa-linkedin fa-3x\"></i></a></li>\n                    <li><a href=\"http://xing.com\"><i className=\"fab fa-xing-square fa-3x\"></i></a></li>\n\n                </ul>\n            </div>\n\n\n        </Container>\n\n    )\n}\nexport default Footer;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/Recipes/Recipes.js",["355"],"import Searchbar from \"../SearchBar/SearchBar\";\nimport recipesData from '../../DataJson/recipesData.json';\nimport Container from 'react-bootstrap/esm/Container';\n\n\nfunction Recipes() {\n    return (\n       \n        <div>\n            <Searchbar\n                placeholder=\"Enter recipe name...\"\n                data={recipesData}\n            />\n        </div>\n       \n    )\n}\n\nexport default Recipes;\n","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js",["356"],"\nimport React, { useState, useEffect } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport styles from './ReadMore.module.scss';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport img from '../../../images/healthy.jpg';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport diet from '../../../images/giphy.gif'\nconst ReadMore = (props) => {\n\n    const params = useParams()\n    let history = useHistory();\n    const [readMoreData, setReadMoreData] = useState([])\n\n    useEffect(() => {\n        console.log(\"props id\", params.id)\n        const urlId = params.id.trim();\n\n        const url = `https://api.edamam.com/api/recipes/v2/recipe_${urlId}?type=public&app_id=ddab3a6f&app_key=60f4a798c728f8f926b6a3563ac5c0ce`\n        getReadMoreData(url)\n    }, [params])\n\n    const getReadMoreData = (url) => {\n        try {\n            axios.get(url, {\n                app_id: 'ddab3a6f',\n                app_key: '60f4a798c728f8f926b6a3563ac5c0ce',\n\n\n            })\n                .then((response) => {\n                    const data = response.data;\n                    console.log(\"json data\", data.recipe.healthLabels)\n                    setReadMoreData(data.recipe)\n                })\n        }\n        catch (error) {\n            console.log(error)\n            alert(error + 'some error occured ')\n        }\n\n    }\n\n    return (\n    <Container className={styles.cardContainer} >\n        {Object.keys(readMoreData).length !== 0 ?\n            <Row>\n                <Col className={styles.col}>\n                    <Card style={{ width: '25rem' }} className={styles.carding}>\n                        <Card.Img variant=\"top\" src={readMoreData.image} alt=\"\" className={styles.imgrecipeLeft} />\n                        <Card.Body>\n                        <Card.Title className={styles.title}>{readMoreData.label}</Card.Title>\n                        <h4>Ingredients:</h4>\n                        <ListGroup className={styles.ListGroup}>{readMoreData.ingredients.map(item => {\n                        return (\n                        <ListGroup.Item  variant='success'>{item['text']}</ListGroup.Item>\n                        )\n                        })}\n                        </ListGroup>\n                        <Button variant=\"success\" className={styles.btnBack}onClick={() => history.goBack()}>Back to recipe search</Button>\n                        </Card.Body>\n                     \n                    </Card>\n                </Col>\n                 \n                <Col>\n                    <Card style={{ width: '25rem' }} className={styles.carding}>\n                        <Card.Img variant=\"top\" src= {diet}\n                                 alt=\"\"className={styles.imgrecipeRight} />\n                        <Card.Body>\n                            <Card.Title>Health labels</Card.Title>\n                            \n                            <ListGroup className={styles.ListGroup} >{readMoreData.healthLabels.map(value => {\n                            return (\n                             <ListGroup.Item  variant=\"info\">{value}</ListGroup.Item>\n                            )\n                           })}\n                            </ListGroup>\n\n                        </Card.Body>\n                    </Card>\n                </Col> \n            </Row> :\n            <div>\n                Loading ...\n            </div>\n        }\n        </Container>\n           \n\n      \n    )\n}\nexport default ReadMore;","/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/DonoutDiagram.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/NutritionAnalysis/BarChart.js",[],"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/index.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/App.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/NavMenu.js",["357","358"],"import styles from \"./NavMenu.module.scss\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport { useJwt } from \"react-jwt\";\nimport Logo from \"../Navbar/logo1.jpg\"\n\n\nimport { NavLink } from 'react-router-dom';\nconst token = localStorage.getItem(\"food-token\")\nconst NavMenu = () => {\n    const { decodedToken, isExpired } = useJwt(token);\n\n\n    return (\n\n        <Navbar className={styles.Navbar} collapseOnSelect expand=\"lg\" bg=\"success\" variant=\"dark\">\n            <Container className={styles.navContainer} >\n                <Navbar.Brand className={[styles.appName, 'application'].join(' ')}>\n\n                    <img class src={Logo} alt=\"bug\" height={80} className={styles.imgLogo} />\n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n\n                    <Nav className=\"me-auto\">\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/\">\n                            Home\n\n                        </Nav.Link>\n\n\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/nutrition-analysis\">\n                            Nutrition analysis\n\n                        </Nav.Link>\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/recipes\">\n                            Recipes\n                        </Nav.Link>\n\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/bmi\">\n                            BMI\n\n                        </Nav.Link>\n\n\n                        <Nav.Link\n\n                            className={styles.navItem}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/articles\">\n                            Articles\n                        </Nav.Link>\n\n\n\n                    </Nav>\n\n\n                    {decodedToken ? (<Nav>\n\n                        <Nav.Link\n\n\n                            className={[styles.navItemLogin].join(' ')}\n                            as={NavLink}\n                            eventKey={1} to=\"/logout\"\n                            onClick={(e) => {\n                                localStorage.removeItem('food-token');\n                                window.location = '/'\n                            }}\n\n                        >\n                            <div className={styles.conBox}>\n\n                                <div className={styles.box}>\n                                    <span className={styles.name}>Logout</span>\n                                    <i className={styles.iButton}></i>\n                                </div>\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link className={styles.navLinkLogout}>\n                            <div className={styles.userImageDiv}>\n                                <img className={styles.image}\n                                    src={decodedToken.image} />\n                            </div>\n\n                        </Nav.Link>\n\n\n\n                    </Nav>) : (<Nav>\n\n\n                        <Nav.Link\n                            className={[styles.navItemLogin].join(' ')}\n\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/login\">\n                            <div className={styles.conBox}>\n                                <div className={styles.box}>\n                                    <span className={styles.name}> Login</span>\n                                    <i className={styles.iButton}></i>\n                                </div>\n                            </div>\n\n                        </Nav.Link>\n\n\n\n\n                        <Nav.Link\n                            className={[styles.navItemLogin].join(' ')}\n                            as={NavLink}\n                            eventKey={1}\n                            to=\"/register\">\n                            <div className={styles.conBox}>\n                                <div className={styles.box}>\n                                    <span className={styles.name}>Register</span>\n                                    <i className={styles.iButton}></i>\n                                </div>\n                            </div>\n                        </Nav.Link>\n\n\n\n                    </Nav>)}\n\n\n\n\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n\n\n    )\n\n};\n\nexport default NavMenu;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/Pages/BmiPage.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Navbar/Pages/Articles.js",["359"],"import CreateArticle from \"../../Articles/CreateArticle/CreateArticle\";\nimport Article from \"../../Articles/Article/Article\";\nimport AllArticles from \"../../Articles/AllArticles/AllArticles\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useJwt } from \"react-jwt\";\nimport Loading from \"../../Loading/Loading\";\n\nconst token = localStorage.getItem(\"food-token\")\n\nconst Articles = () => {\n    const { decodedToken} = useJwt(token);\n\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getArticlesData();\n    }, [])\n\n    useEffect(() => {\n       \n\n\n    }, [articles])\n\n    const doesUserHaveArticle = async (articleId) => {\n        const getUrl = `http://localhost:3369/articles/userhasarticle/${articleId}`;\n        const data = await fetch(getUrl, {\n            method: 'GET',\n            headers: {\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            }\n        });\n        const res = await data.text();\n        // Wenn Article zu user gehört kommt \"authorized\"\n        if (res !== \"authorized\") {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const getArticlesData = async () => {\n        const data = await fetch(\"http://localhost:3369/articles\");\n        const res = await data.json();\n\n\n        const updatedArray = await Promise.all(res.map(async article => {\n            const canEdit = await doesUserHaveArticle(article._id);\n            return { ...article, canEdit: canEdit }\n        }))\n        \n        setArticles(updatedArray.reverse());\n        setLoading(false);\n\n    }\n    /*   setTimeout(function () {\n          setLoading(false);\n      }, 2800); */\n\n\n    const addNewArticle = async (newArticle) => {\n       \n        newArticle.userId = decodedToken.id;\n        setLoading(true)\n        const res = await fetch('http://localhost:3369/articles', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newArticle)\n        });\n        // TODO IF YOUR REALLY WANN RELOAD location.reload();\n\n       \n        const newArticleApi = await res.json();\n        \n        const upditArticle = [{ ...newArticleApi, canEdit: true }, ...articles]\n        setArticles(upditArticle)\n\n        setLoading(false);\n\n\n    }\n\n    const deleteArticle = async (id) => {\n        const confirm = prompt(\"Please confirm the delete of the article with YES\");\n        if (confirm === \"YES\" || confirm === \"yes\") {\n            const deleteUrl = `http://localhost:3369/articles/${id}`;\n            const res = await fetch(deleteUrl, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': localStorage.getItem(\"food-token\") || \"\"\n                }\n\n            });\n            if (res.status === 200) {\n                alert(\"Article was deleted!\")\n            } else {\n                alert(\"Some Error happened\")\n            }\n        } else {\n            alert(\"Please confirm correctly\")\n        }\n\n\n        /*     const result = await res.json();\n            if (result.err) {\n                alert('This Article is not for you');\n            }  */\n        const articlesDeleteUpate = articles.filter(article => article._id !== id)\n        setArticles(articlesDeleteUpate);\n\n\n    }\n\n    const updateArticle = async (id, artUpdate) => {\n        const updateUrl = `http://localhost:3369/articles/${id}`;\n\n        const res = await fetch(updateUrl, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            },\n\n            body: JSON.stringify(artUpdate)\n\n        });\n\n\n        const result = await res.json();\n        if (result.err) {\n            alert('This Article is not for you');\n        }\n\n        // const newArticleApi = await res.json();\n        // console.log('newArticleApi', newArticleApi)\n        // const ArticleUpdated = articles.map(article => article._id === id ? artUpdate : article);\n        // setArticles(ArticleUpdated)\n        // console.log(\"state set: \", articles)\n\n        getArticlesData();\n        setLoading(false);\n    }\n\n    /*     const getArticleById = (id) => {\n     \n            const article = articles.find(art => art._id === id);\n            console.log('article => ', article)\n            return article;\n        } */\n\n\n    return (\n        <div >\n            <Switch>\n                <Route path='/articles'>\n                    {loading ? <Loading /> : <AllArticles\n                        data={articles}\n\n                    />}\n                </Route>\n\n                <Route path='/create-article'>\n\n\n\n                    {loading ? <Loading /> :\n                        <CreateArticle\n                            data={articles}\n                            addNewArticle={addNewArticle}\n                            deleteArticle={deleteArticle}\n                            updateArticle={updateArticle}\n                            doesUserHaveArticle={doesUserHaveArticle}\n                        />\n                    }\n\n                </Route>\n\n\n                <Route path='/article/:title' component={Article}>\n                    {/*   <Article getArticleById={getArticleById} /> */}\n                </Route>\n\n            </Switch>\n\n\n        </div>\n    )\n}\nexport default Articles;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Footer/Footer.js",["360"],"\nimport styles from './Footer.module.scss';\nimport { Link } from 'react-router-dom';\n/* import { BsArrowBarUp } from 'react-icons/bs'; */\nimport Logo from '../Navbar/logo1.jpg';\n\n\nconst Footer = () => {\n\n       const handleClick = () => {\n           window.scrollTo(0, 0)\n       }\n\n    return (\n\n        <div className={styles.containerFooter}>\n            <div className={styles.divcontainerFotter}>\n                {/* {  <div onClick={handleClick} className={styles.arrow}><BsArrowBarUp /></div>} */}\n\n                <footer className={styles.footer}>\n\n                    <div className={styles.waves}>\n                        <div className={[styles.wave, styles.wave1].join(' ')}></div>\n                        <div className={[styles.wave, styles.wave2].join(' ')}></div>\n                        <div className={[styles.wave, styles.wave3].join(' ')}></div>\n                        <div className={[styles.wave, styles.wave4].join(' ')}></div>\n                    </div>\n\n                    <ul className={styles.socialIcon}>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://facebook.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-facebook \"></i>\n                            </a>\n                        </li>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://twitter.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-twitter-square\"></i>\n                            </a>\n                        </li>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://instagram.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-instagram\"></i>\n                            </a>\n                        </li>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://github.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-github\"></i>\n                            </a>\n                        </li>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://xing.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-xing-square\"></i>\n                            </a>\n                        </li>\n\n                        <li className={styles.socialIconItem}>\n                            <a className={styles.socialIconLink} href=\"http://linkedin.com\" target='_blank' rel=\"noreferrer\">\n                                <i className=\"fab fa-linkedin\"></i>\n                            </a>\n                        </li>\n\n\n                    </ul>\n\n                    <ul className={styles.menu}>\n                        <li className={styles.menuItem}><Link className={styles.menuLink} to=\"/\">Home</Link></li>\n                        <li className={styles.menuItem}><Link className={styles.menuLink} to=\"/nutrition-analysis\">Nutrition analysis</Link></li>\n                        <li className={styles.menuItem}><Link className={styles.menuLink} to=\"/recipes\">Recipes</Link></li>\n                        <li className={styles.menuItem}><Link className={styles.menuLink} to=\"/bmi\">BMI</Link></li>\n                        <li className={styles.menuItem}><Link className={styles.menuLink} to=\"/articles\">Articles</Link></li>\n\n\n                    </ul>\n                    <p className={styles.textFooter}>&copy;2021 <img src={Logo} alt=\"bug\" height={50}className={styles.imgLogo}/> All Rights Reserved\n                    \n                    </p>\n\n                </footer>\n            </div>\n\n        </div>\n\n    )\n}\nexport default Footer;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/Home.js",["361","362","363","364","365","366"],"import styles from \"./Home.module.scss\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { FaLinkedin } from \"react-icons/fa\";\n\nimport ImageSlider from \"./ImageSlider\";\nimport { SliderData } from \"./SliderData\";\nimport ImgApp from \"./imgApp\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <div className={styles.title}>\n        <h1 style={{ fontWeight: \"800\" }}>\n          Your Health. Your Decisions. Our Support.\n        </h1>\n\n        <ul>\n          <li>Medical experts and passionate journalists</li>\n          <li>Thorough research and solid methodologies</li>\n          <li>Fresh and actionable insights written for you</li>\n        </ul>\n      </div>\n\n      <ImgApp />\n      <div className={styles.article}>\n        <div className={styles.articleContents}>\n          <h3>What Is The Keto Diet?</h3>\n\n          <ul>\n            <a href=\"#lession1\">\n              <li>What Is the Ketogenic Diet?</li>\n            </a>\n            <a href=\"#lession2\">\n              <li>Keto Diet Foods</li>\n            </a>\n            <a href=\"#lession3\">\n              <li>Sources</li>\n            </a>\n          </ul>\n        </div>\n\n        <div className={styles.textcontent}>\n          <div id=\"lession1\">\n            <h4 className={styles.articleh4title1}>\n              Gaining traction in recent years, the keto diet—also known as the\n              ketogenic diet—is a popular weight loss plan. It gets its name\n              from ketosis, a metabolic process that occurs when your body burns\n              fat rather than carbohydrates.\n            </h4>\n          </div>\n\n          <div>\n            <div>\n              <section className={styles.lession}>\n                <h2 className={styles.listItemH2title1}>\n                  What Is the Ketogenic Diet?\n                </h2>\n\n                <div>\n                  <p>\n                    The ketogenic diet is a high-fat, very-low-carbohydrate\n                    eating plan that aims to bring about weight loss by causing\n                    your body to enter a state of fat-burning ketosis. Although\n                    it’s become popular during the past decade or so as a weight\n                    loss strategy, it was originally designed 100 years ago as a\n                    way to reduce seizures in people with epilepsy.\n                  </p>\n                  <p>\n                    The keto diet not only promises weight loss, but also claims\n                    to reduce hunger and help balance blood sugar. However, it\n                    can be a difficult protocol to follow. “One of the cons of\n                    the keto diet is that it has very strict rules,” says\n                    Melissa Majumdar, a certified specialist in obesity and\n                    weight management and a bariatric coordinator at Emory\n                    University Hospital Midtown in Atlanta. “I don’t know\n                    anybody who would be able to follow this diet for a long\n                    period of time.” It’s also risky for people with certain\n                    health conditions.\n                  </p>\n                  <p>\n                    A keto diet is low enough in carbs and protein and high\n                    enough in fat to force the body to burn stored fat instead\n                    of consumed carbohydrates for energy. To trigger ketosis, a\n                    diet typically must contain a maximum of only 50 grams of\n                    carbohydrates per day. (A slice of whole-wheat bread, for\n                    example, contains about 15 grams of carbohydrates, and a\n                    medium banana contains about 29 grams of carbohydrates.)\n                    Overall, carbohydrates contribute fewer than 10% of calories\n                    in a keto diet. The remainder comes from fat (70% to 80% of\n                    daily calories) and protein (about 10% of daily calories or\n                    about ½ gram per pound of body weight).\n                  </p>\n                  <h3>What Is Ketosis?</h3>\n                  <p>\n                    Your body prefers to burn glucose-containing carbs for\n                    energy. When carbohydrate-sourced glucose is not available,\n                    your body burns fat instead. To use fat for energy, your\n                    liver converts fat to substances known as ketones and burns\n                    those instead of glucose. When this process occurs, your\n                    body is in a state of ketosis.\n                  </p>\n                  <p>\n                    Because your body prefers to burn glucose rather than fat,\n                    it may resist shifting into ketosis and will not do so\n                    unless you adhere strictly to carbohydrate and protein\n                    limits. It can take a few days, sometimes longer, to achieve\n                    a state of ketosis, and you must continue to limit\n                    carbohydrates and protein strictly in order to stay in\n                    ketosis. “If you don’t follow the rules, you go out of\n                    ketosis,” says Majumdar, who is also a registered dietitian\n                    and spokesperson for the Academy of Nutrition and Dietetics.\n                  </p>\n                  <h3>Types of Keto Diets</h3>\n                  <p>\n                    Various types of diets call themselves keto diets. However,\n                    some would be more accurately described as “keto-ish” or\n                    low-carb diets because they’re too high in carbohydrates to\n                    induce ketosis regularly. True keto diets are very low in\n                    carbohydrates, high in fat and moderate in protein.\n                  </p>\n                  <p>\n                    Well-known keto-style diets include the Atkins and South\n                    Beach diet. Other low-carb diets may claim to be keto diets,\n                    but unless they include fewer than 50 grams of carbohydrates\n                    daily and only a moderate amount of protein, they may not\n                    induce ketosis reliably. In addition to limiting\n                    carbohydrates, you have to make sure you avoid eating too\n                    much protein as well, because protein can interfere with\n                    ketosis.\n                  </p>\n                </div>\n              </section>\n\n              <section className={styles.lession}>\n                <div id=\"lession2\">\n                  <h2 className={styles.listItemH2title2}>Keto Diet Foods</h2>\n                </div>\n                <div>\n                  <div>\n                    <h4 className={styles.articleh4title2}>\n                      The best foods for the keto diet are those high in fat,\n                      low in carbohydrates and moderate in protein, such as:\n                    </h4>\n                  </div>\n                  <ul>\n                    <li>Avocados</li>\n                    <li>Eggs</li>\n                    <li>\n                      Fats, including oils like olive, palm and coconut, as well\n                      as butter and lard\n                    </li>\n                    <li>Fish and shellfish</li>\n                    <li>\n                      Low-carb, non-starchy vegetables, such as leafy greens\n                    </li>\n                    <li>Meat and poultry</li>\n                    <li>Cheese</li>\n                    <li>Nuts</li>\n                    <li>Olives</li>\n                    <li>Seeds</li>\n                    <li>\n                      Berries in very limited amounts (¼ cup), because they\n                      contain carbohydrates, although fewer than other fruits\n                    </li>\n                    <li>Dark chocolate and cocoa powder</li>\n                  </ul>\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ImageSlider slides={SliderData} />\n\n      <div id=\"lession3\" className={styles.frontendbox}>\n        <div className={styles.boxT}>\n          <div className={styles.front}></div>\n          <div className={styles.back}>\n            <ul>\n              <h2>Tareq Mshaal</h2>\n              <li>Web developer</li>\n              <li>\n                <a\n                  href=\"http://linkedin.com/in/tareq-mshaal-38a223217\"\n                  target=\"_blank\"\n                >\n                  <FaLinkedin color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>\n                LinkedIn\n              </li>\n              <li>\n                <a href=\"http://github.com/tareq-1\" target=\"_blank\">\n                  <AiFillGithub color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>\n                GitHub\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={styles.boxH}>\n          <div className={styles.front}></div>\n          <div className={styles.back}>\n            <ul>\n              <h2>Hosam Aldin</h2>\n              <li>Web developer</li>\n              <li>\n                <a\n                  href=\"http://linkedin.com/in/hosamaldin-sabrin/\"\n                  target=\"_blank\"\n                >\n                  <FaLinkedin color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>{\" \"}\n                LinkedIn{\" \"}\n              </li>\n              <li>\n                <a href=\"http://github.com/hosamaldinsabrin\" target=\"_blank\">\n                  <AiFillGithub color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>{\" \"}\n                GitHub\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={styles.box}>\n          <div className={styles.front}></div>\n          <div className={styles.back}>\n            <ul>\n              <h2>Zhe Sun</h2>\n              <li>Web developer</li>\n              <li>\n                <a\n                  href=\"http://linkedin.com/in/zhe-sun-bb6898146\"\n                  target=\"_blank\"\n                >\n                  <FaLinkedin color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>\n                LinkedIn\n              </li>\n              <li>\n                <a href=\"http://github.com/Zhe-S\" target=\"_blank\">\n                  <AiFillGithub color=\"lightblue\" fontSize=\"1.5em\" />{\" \"}\n                </a>\n                GitHub\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/Recipes/Recipes.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/ReadMore/ReadMore.js",["367"],"\nimport React, { useState, useEffect } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport styles from './ReadMore.module.scss';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport diet from '../../../images/giphy.gif';\nimport Loading from \"../../Loading/Loading\";\n\nconst ReadMore = (props) => {\n\n    const params = useParams()\n    let history = useHistory();\n    const [readMoreData, setReadMoreData] = useState([])\n\n    useEffect(() => {\n        console.log(\"props id\", params.id)\n        const urlId = params.id.trim();\n\n        const url = `https://api.edamam.com/api/recipes/v2/recipe_${urlId}?type=public&app_id=ddab3a6f&app_key=60f4a798c728f8f926b6a3563ac5c0ce`\n        getReadMoreData(url)\n    }, [params])\n\n    const getReadMoreData = (url) => {\n        try {\n            axios.get(url, {\n                app_id: 'ddab3a6f',\n                app_key: '60f4a798c728f8f926b6a3563ac5c0ce',\n\n\n            })\n                .then((response) => {\n                    const data = response.data;\n                    console.log(\"json data\", data.recipe.healthLabels)\n                    setReadMoreData(data.recipe)\n                })\n        }\n        catch (error) {\n            console.log(error)\n            alert(error + 'some error occured ')\n        }\n\n    }\n\n    return (\n        <Container className={[styles.cardContainer,'bg-light'].join(' ')} >\n            {Object.keys(readMoreData).length !== 0 ?\n                <Row>\n                    <Col className={styles.col}>\n                        <Card style={{ width: '25rem' }} className={[styles.carding,'bg-light'].join(' ')}>\n                            <Card.Img variant=\"top\" src={readMoreData.image} alt=\"\" className={styles.imgrecipeLeft} />\n                            <Card.Body>\n                                <Card.Title className={styles.title}>{readMoreData.label}</Card.Title>\n                                <h4>Ingredients:</h4>\n                                <ListGroup className={styles.ListGroup}>{readMoreData.ingredients.map(item => {\n                                    return (\n                                        <ListGroup.Item variant='success'>{item['text']}</ListGroup.Item>\n                                    )\n                                })}\n                                </ListGroup>\n                                {/*   <Button variant=\"success\" className={styles.btnBack} onClick={() => history.goBack()}>Back to recipe search</Button> */}\n                                <div className={styles.btnDiv}>\n                                    <button className={styles.box} onClick={() => history.goBack()}>\n                                        <span className={styles.name}>Back to recipe search</span>\n                                        <i className={styles.iButton}></i>\n                                    </button>\n                                </div>\n                            </Card.Body>\n\n                        </Card>\n                    </Col>\n\n                    <Col>\n                        <Card style={{ width: '25rem' }} className={[styles.carding,'bg-light'].join(' ')}>\n                            <Card.Img variant=\"top\" src={diet}\n                                alt=\"\" className={styles.imgrecipeRight} />\n                            <Card.Body>\n                                <Card.Title>Health labels</Card.Title>\n\n                                <ListGroup className={styles.ListGroup} >{readMoreData.healthLabels.map(value => {\n                                    return (\n                                        <ListGroup.Item variant=\"info\">{value}</ListGroup.Item>\n                                    )\n                                })}\n                                </ListGroup>\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row> :\n                <Loading />\n            }\n        </Container>\n\n\n\n    )\n}\nexport default ReadMore;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Account/LogIn/LogIn.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Account/Register/Register.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/DonoutDiagram.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/NutritionAnalysis/BarChart.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/SliderData.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/imgApp.js",["368","369"],"import styles from \"./imgApp.module.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Img1 from \"./Imgs/1.jpg\";\nimport Img2 from \"./Imgs/2.jpg\";\nimport Img3 from \"./Imgs/3.jpg\";\nimport Img4 from \"./Imgs/4.jpg\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction useInterval(callback, interval) {\n    useEffect(() => {\n        const start = new Date().getTime()\n        const I = setInterval(() => {\n            callback(new Date().getTime() - start)\n        }, interval)\n        return () => clearInterval(I)\n    }, [])\n}\n\nfunction useSlider(N, speed = 4000) {\n    const [slider, setSlider] = useState(0)\n    useInterval((diff) => {\n        setSlider(_ => Math.floor(diff / speed) % N)\n    }, 300)\n    return slider\n}\n\n/* function usePath(N, speed = 4000) {\n    const [slider, setSlider] = useState(0)\n    useInterval((diff) => {\n        setSlider(_ => Math.floor(diff / speed) % N)\n    }, 300)\n    return slider\n} */\n\n\nconst imgs = [\n    {\n        img: Img1,\n        path: '/recipes'\n\n    },\n    {\n        img: Img2,\n        path: '/nutrition-analysis'\n\n    },\n    {\n        img: Img3,\n        path: '/bmi'\n\n    },\n    {\n        img: Img4,\n        path: '/articles'\n\n    }\n\n];\n\nconst ImgApp = () => {\n    const slider = useSlider(imgs.length)\n\n\n    return (\n        <div className={styles.scroller}>\n            <div\n                className={styles.inner}\n                style={{\n                    width: `${imgs.length * 100}%`,\n                    transform: `translateX(-${100 * slider / imgs.length}%)`\n                }}>\n\n                {imgs.map((src, index) => {\n\n                    return (\n\n\n\n                        <Link to={src.path}\n\n                        >\n                            <div className={styles.containerSlider} key={index}>\n\n                                <p className={styles.text}>{src.title}</p>\n                                <img\n                                    className={styles.img}\n                                    style={{\n                                        width: `${100 / imgs.length}%`\n                                    }}\n\n                                    alt=\"#\"\n                                    src={src.img}\n                                />\n                            </div>\n                        </Link>\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\n\nexport default ImgApp","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Home/ImageSlider.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/BmiComponent/BmiComponent.js",["370","371"],"import styles from \"./BmiComponent.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { useState } from \"react\";\nimport { GiBodyHeight } from 'react-icons/gi';\nimport { GiWeight } from 'react-icons/gi';\nimport Arrows from \"../Arrows/Arrows\";\nimport LikeBtn from \"../Buttons/LikeBtn/LikeBtn\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\n\nconst BmiComponent = () => {\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n\n  const [bmiResult, setBmiResult] = useState(20.0);\n\n  const [status, setStatus] = useState(\"\");\n\n  function calculateBMI() {\n    if (weight !== 0 && height !== 0 && weight !== \"\" && height !== \"\") {\n\n      let bmi = Number(weight / (height / 100) ** 2).toFixed(1);\n      setBmiResult(bmi);\n      console.log(bmi);\n      let bmiStatus = getStatus(bmi);\n      setStatus(bmiStatus);\n      setHeight(\"\");\n      setWeight(\"\");\n    }\n  }\n\n  function getStatus(bmi) {\n\n    console.log(typeof (status))\n    if (bmi < 18.5) return \"Underweight\";\n    else if (bmi >= 18.5 && bmi <= 24.9) return \"Normal\";\n    else if (bmi >= 25) return \"überweight\";\n    else return \"Obese\";\n  }\n\n  return (\n    <div className=\"container bg-light secondary\">\n      <Arrows />\n      <div className={styles.containerH2}>\n        <div className={styles.wrapper}>\n          <h2>BMI Calculator</h2>\n        </div>\n      </div>\n      <div className={styles.inputsResponse}>\n\n\n        <Form>\n          <Row className={styles.rowIputs}>\n            <Form.Group\n\n              className={styles.inputItem}\n              as={Col}\n              controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Height (cm)\n\n                <GiBodyHeight className={styles.icon} />\n              </Form.Label>\n              <Form.Control\n                className={styles.inputBmi}\n                type=\"text\"\n                value={height}\n                onChange={(e) => setHeight(e.target.value)}\n\n              />\n\n            </Form.Group>\n\n            <Form.Group\n              className={styles.inputItem}\n              as={Col}\n              controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Weight (kg)\n                <GiWeight className={styles.icon} />\n              </Form.Label>\n              <Form.Control\n                className={styles.inputBmi}\n                type=\"text\"\n                value={weight}\n                onChange={(e) => setWeight(e.target.value)}\n\n              />\n\n            </Form.Group>\n          </Row>\n        </Form>\n      </div>\n\n           <div className={styles.btnDiv}>\n\n        <button className={styles.box}\n          type=\"submit\"\n          onClick={calculateBMI}\n        >\n          <span className={styles.name}>Calculate BMI</span>\n          <i className={styles.iButton}></i>\n        </button>\n\n      </div>\n\n\n\n\n      <div className={styles.dark}>\n        <p className={styles.result}>\n          {bmiResult}\n\n        </p>\n      </div>\n\n\n      <Row className=\"justify-content-md-center\">\n\n        <Col\n          className={styles.colBmi}\n          style={status === \"Underweight\" || status === \"\" ? { color: \"orange\" } : { opacity: \"0.3\" }}\n        >\n          <Card className={styles.card} >\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}> &lt; 18.5</span>\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Underweight</h3>\n              <Card.Text className={styles.cardtext}>\n                Your weight is very low in relation to your height. Ideally, you should gain some weight to stay healthy and productive in the long run. Read our tips on eating right to stay fit now.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col\n          className={styles.colBmi}\n          style={status === \"Normal\" || status === \"\" ? {} : { opacity: \"0.3\" }}\n        >\n          <Card className={styles.card} >\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}>18.5 - 24.9</span>\n\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Normal weight</h3>\n              <Card.Text className={styles.cardtext}>\n                The BMI shows you a healthy ratio of height to weight. With a balanced diet and regular exercise, it stays that way in the long term. With just one click to the information for a healthy lifestyle.\n                <br />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col\n          className={styles.colBmi}\n          style={status === \"überweight\" || status === \"\" ? { color: \"darkred\" } : { opacity: \"0.3\" }}\n        >\n          <Card className={styles.card} >\n            <Card.Title className={styles.title}>\n              <span className={styles.titlevalue}>&gt; 25</span>\n            </Card.Title>\n            <Card.Body className={styles.cardbody}>\n              <h3 className=\"text-center mt-3 mb-2\">Obesity</h3>\n              <Card.Text className={styles.cardtext}>\n                25–30 OVERWEIGHT\n                According to your body mass index, you are overweight. This increases the risk of diseases such as B. Diabetes. On the way to less pounds, we support you with offers to lose weight.\n                <br />\n                <br />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n      </Row>\n\n    </div>\n  );\n};\n\nexport default BmiComponent;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Recipes/SearchBar/SearchBar.js",["372"],"import React, { useState, useEffect } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport styles from \"./SearchBar.module.scss\";\n\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\n\nimport RecipeBtn from '../../Buttons/RecipeBtn/RecipeBtn';\n\nfunction SearchBar({ placeholder, data }) {\n    const [filteredData, setFilteredData] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n\n    useEffect(() => {\n        setFilteredData(data)\n    }, [])\n\n\n    const handleFilter = (event) => {\n\n        const searchWord = event.target.value;\n        setWordEntered(searchWord);\n\n        const newFilter = data.filter((value) => {\n            return value.recipe.label.toLowerCase().includes(searchWord.toLowerCase())\n        });\n\n\n        if (searchWord !== \"\") {\n            setFilteredData(newFilter);\n        } else {\n            setFilteredData([]);\n        }\n\n\n    };\n\n    const clearInput = () => {\n        setWordEntered(\"\");\n        setFilteredData([]);\n    };\n\n  \n\n\n    return (\n\n\n        <Container className={styles.container} >\n            <div className={styles.searchInputs}>\n                <div className={styles.containerInputIcon}>\n                    <Form.Control\n                        type=\"text\"\n                        className={styles.SearchRecipe}\n                        value={wordEntered}\n                        placeholder={placeholder}\n                        onChange={handleFilter} />\n\n                    <div >\n                   \n                        {filteredData.length === 0 ? <BsSearch className={styles.searchIcon} id=\"searchIcon\" /> :\n                            <AiOutlineCloseCircle className={styles.searchIcon} id=\"closeIcon\"\n                                onClick={clearInput} />}\n                    </div>\n                </div>\n            </div>\n\n            {filteredData.length !== 0 ? (\n                <div>\n                    <Row>\n                        {filteredData.map((value, key) => {\n                            return (\n                                <Col key={key} className={styles.col}>\n\n                                    <Card style={{ width: '18rem' }} className={styles.cardBody}>\n                                        <Card.Img variant=\"top\" src={value.recipe.image} className={styles.recipeImg} />\n                                        <Card.Body>\n                                            <Card.Title className={styles.cardTitle}>{value.recipe.label}</Card.Title>\n                                            <Card.Text className={styles.cardText}>\n                                                {value.recipe.healthLabels}\n                                            </Card.Text>\n\n                                            <Link\n                                                to={`/ReadMore/${value.recipe.uri.slice(value.recipe.uri.indexOf(\"_\") + 1)} `}\n                                                state={{ url: \"testus\" }}\n                                            >\n                                            \n                                             \n                                                    <RecipeBtn />\n                                               \n\n\n\n\n                                            </Link>\n\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </div>)\n                :\n                <h2 className={styles.nodata}>\n                    No data found\n                </h2>\n            }\n        </Container>\n\n\n    )\n\n\n}\n\nexport default SearchBar","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/Article/Article.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js",["373"],"import Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport styles from './AllArticles.module.scss';\n\nimport { FaRegArrowAltCircleRight } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport Arrows from '../../Arrows/Arrows';\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport de from 'javascript-time-ago/locale/en';\nimport LikeBtn from '../../Buttons/LikeBtn/LikeBtn';\n\nconst AllArticles = ({ data }) => {\n\n    TimeAgo.addDefaultLocale(de);\n\n    const convertToCamelCase = (word) => {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return (\n\n        <Container className={[styles.containerArticle, 'bg-light'].join(' ')}>\n            <Arrows />\n            <div className={styles.containerH2}>\n                <div className={styles.wrapper}>\n                    <h2>All Articles</h2>\n                </div>\n            </div>\n\n\n\n            <Row className={[styles.rowArticle, \"justify-content-md-center\"].join(' ')}>\n                <Link to='/create-article'>\n\n                    {/*          <Button className={styles.btnAddArticle}\n                        variant=\"outline-success\"\n                    >\n                        Add New Article\n                    </Button> */}\n\n                    <div className={styles.btnDiv}>\n\n                        <button className={styles.box}>\n                            <span className={styles.name}>Add New Article</span>\n                            <i className={styles.iButton}></i>\n                        </button>\n                    </div>\n\n                </Link>\n\n\n                {data.map(article => {\n                    return (\n                        <Col md=\"auto\" className={styles.colArticle}>\n                            <Card className={styles.cardArticle}>\n                                <div className={styles.articleAndUserImages}>\n                                    <Link to={{\n                                        pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                        state: {\n                                            article,\n                                            author: article.userId.firstName + ' ' + article.userId.lastName,\n                                            img: article.userId.image\n                                        }\n                                    }}>\n                                        <div className={styles.imgArticleDiv}>\n                                            <Card.Img className={styles?.imgArticle} variant=\"top\" src={article.image} />\n\n                                        </div>\n\n\n\n                                    </Link>\n\n\n                                    <div className={styles.containerDataUser}>\n                                        <div className={styles.imgUserDiv}>\n                                            <Card.Img className={styles.imgUser} variant=\"top\" src={article.userId.image} />\n                                        </div>\n\n                                        <Card.Text className={styles.textUser}>\n                                            {\n                                                convertToCamelCase(article.userId.firstName) + ' ' +\n                                                convertToCamelCase(article.userId.lastName)\n                                            }\n\n                                        </Card.Text>\n\n                                        <Card.Text className={styles.textTime}>\n                                            <ReactTimeAgo date={article.createDate} locale=\"en-En\" />\n                                        </Card.Text>\n\n                                    </div>\n                                </div>\n                                <Card.Body className={styles.cardBody}>\n                                    <Link to={{\n                                        pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                        state: {\n                                            article,\n                                            author: article.userId.firstName + ' ' + article.userId.lastName,\n                                            img: article.userId.image\n                                        }\n                                    }}>\n                                        <Card.Title className={styles.titleArticle}>\n                                            {article.title}\n                                        </Card.Title>\n                                    </Link >\n                                    <Card.Text className={styles.textStyle}>\n                                        {article.text}\n                                    </Card.Text>\n\n                                    <div className={styles.likeDetails}>\n                                        <div className={styles.readBtn}>\n                                            <FaRegArrowAltCircleRight color=\"darkcyan\" size=\"20px\" />\n                                            <Link to={{\n                                                pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                                state: {\n                                                    article,\n                                                    author: article.userId.firstName + ' ' + article.userId.lastName,\n                                                    img: article.userId.image\n                                                }\n                                            }}>\n\n                                                <div className={styles.readMore}>Read More</div>\n                                            </Link>\n                                        </div>\n\n\n\n                                        <LikeBtn />\n                                    </div>\n\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    )\n                })}\n\n            </Row>\n\n        </Container >\n\n\n    )\n\n}\n\n\n\nexport default AllArticles;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Articles/CreateArticle/CreateArticle.js",["374","375","376"],"import Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport styles from './CreateArticle.module.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaPen } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaTimes } from \"react-icons/fa\";\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport Arrows from '../../Arrows/Arrows';\nimport de from 'javascript-time-ago/locale/en';\n\n/* import { useJwt } from \"react-jwt\"; \nconst token = localStorage.getItem(\"food-token\"); */\n\n\nconst CreateArticle = ({ data, addNewArticle, deleteArticle, updateArticle, doesUserHaveArticle }) => {\n    /* const { decodedToken, isExpired } = useJwt(token); */\n\n    TimeAgo.addDefaultLocale(de);\n\n\n    useEffect(() => {\n\n\n\n    }, [data])\n\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [file, setFile] = useState(null);\n    const [imageUpdated, setImageUpdate] = useState(false);\n    /*  const [createDate, setCreateDate] = useState(Number); */\n\n    const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n\n    const [idToEdite, setIdToEdite] = useState('');\n\n    const fileChangeHandler = (event) => {\n        setImageUpdate(true)\n        let fileReader = new FileReader();\n        console.log(Date.now())\n        fileReader.readAsDataURL(event.target.files[0])\n        fileReader.onloadend = () => {\n\n            let [file] = event.target.files;\n            if (file) {\n                setPreviewImageSrc(URL.createObjectURL(file))\n            }\n\n            const base64ImageUrl = fileReader.result;\n            //console.log('base64Image', base64ImageUrl);\n\n            setFile(base64ImageUrl)\n        }\n    }\n\n    const handleAddSubmit = (event) => {\n\n        event.preventDefault();\n\n        const newArticle = {\n            title: title,\n            text: text,\n            image: file,\n\n        }\n        addNewArticle(newArticle)\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n    }\n    const handleEditeSubmit = (event) => {\n        event.preventDefault();\n\n\n        const UpditeArticle = {\n            title: title,\n            text: text,\n            image: file,\n\n        }\n        updateArticle(idToEdite, UpditeArticle)\n        setIdToEdite('')\n        setTitle('');\n        setText('');\n        setPreviewImageSrc('');\n\n\n    }\n\n    const updateHandle = (article) => {\n        setTitle(article.title);\n        setText(article.text);\n        setIdToEdite(article._id);\n        setPreviewImageSrc(article.image);\n        doesUserHaveArticle(article._id)\n        /* setCreateDate(article.createDate) */\n    }\n\n    const convertToCamelCase = (word) => {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return (\n        <Container>\n            <Arrows />\n            <div className={styles.containerH2}>\n                <div className={styles.wrapper}>\n                    <h2>Add or Edit an new Article</h2>\n                </div>\n            </div>\n\n            <Row className=\"justify-content-md-center\">\n                <Col sm={12} md={12} lg={6}>\n\n                    <Card className={styles.cardCreateArt}>\n                        <Form onSubmit={idToEdite ? handleEditeSubmit : handleAddSubmit} >\n                            <div className={styles.imageCreateDiv}>\n                                {previewImageSrc ? <img className={styles.imageCreate} src={previewImageSrc} alt=\"test\" /> : null}\n\n                            </div>\n                            {/*  <Button className={styles.addPhotoBtn}\n                            variant=\"outline-primary\"\n                        >\n\n                            Add Photo\n                            <Form.Control\n                                className={styles.inputFile}\n                                type=\"file\"\n                                name='file'\n                                onChange={fileChangeHandler}\n\n                            />\n                        </Button> */}\n                            <div className={styles.addPhotoDiv}>\n                                <button className={[styles.box, styles.box1].join(' ')}>\n                                    <Form.Control\n                                        className={styles.inputFile}\n                                        type=\"file\"\n                                        name='file'\n                                        onChange={fileChangeHandler}\n\n                                    />\n                                    <span className={styles.name}>Add Photo</span>\n                                    <i className={styles.iButton}></i>\n\n\n                                </button>\n                            </div>\n\n\n\n\n                            <Form.Control\n                                className={styles.inputText}\n                                type=\"text\"\n                                /*  placeholder={`What’s on your mind ${convertToCamelCase(data[0].userId.firstName)}?`} */\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n\n                            />\n\n                            <Form.Group className=\"mb-3\" controlId=\"Text\">\n\n                                <Form.Control as=\"textarea\"\n                                    className={styles.inputTextArea}\n                                    rows={3}\n                                    placeholder=\"Enter your Text\"\n                                    value={text}\n                                    onChange={(e) => setText(e.target.value)}\n\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                                {/*        <FaPlusCircle color=\"darkcyan\" size=\"20px\"\n                                className={styles.addPhotoBtn}\n\n                            /> */}\n\n\n                            </Form.Group>\n\n                            <div className={styles.addAndBackBtnDiv}>\n\n\n                                <button className={[styles.box, styles.box2].join(' ')}>\n                                    <span className={styles.name}>{idToEdite ? 'Save' : 'Add'}</span>\n                                    <i className={styles.iButton}></i>\n                                </button>\n\n\n\n\n                                <Link to='articles'>\n\n                                    <button className={[styles.box, styles.box3].join(' ')}>\n                                        <span className={styles.name}>Back to Articles</span>\n                                        <i className={styles.iButton}></i>\n                                    </button>\n                                </Link>\n                            </div>\n\n\n                        </Form>\n                    </Card>\n                </Col>\n\n                <Col sm={12} md={12} lg={6}>\n                    {data.map(article => {\n\n\n                        return (\n\n                            <Card key={article._id} className={styles.cardCreateArt}>\n\n                                <div className={styles.articleAndUserImages}>\n                                    <div className={styles.imgArticleDiv}>\n                                        <Card.Img className={styles.imgArticle} variant=\"top\" src={article.image} />\n\n                                    </div>\n\n                                    <div className={styles.containerDataUser}>\n                                        <div className={styles.imgUserDiv}>\n                                            <Card.Img className={styles.imgUser} variant=\"top\" src={article.userId.image} />\n                                        </div>\n                                        <Card.Text className={styles.textUser}>\n                                            {\n                                                convertToCamelCase(article.userId.firstName) + ' ' +\n                                                convertToCamelCase(article.userId.lastName)\n                                            }\n\n                                        </Card.Text>\n\n                                        <Card.Text className={styles.textTime}>\n                                            <ReactTimeAgo date={article.updatedAt} locale=\"en-En\" />\n\n                                        </Card.Text>\n                                    </div>\n\n\n                                </div>\n\n                                <Card.Body>\n                                    <Card.Title className={styles.titleArticle}>{article.title}</Card.Title>\n\n\n\n\n\n                                    <Card.Text >\n                                        {article.text}\n                                    </Card.Text>\n\n                                    {/* {decodedToken.id == article.userId._id && */}\n                                    {article.canEdit ?\n                                        <div className={styles.editDeleteIcon}>\n                                            {/* <Button className={styles.btnEditeAndDelete} variant=\"outline-primary\"\n                                                onClick={() => updateHandle(article)}\n                                            >\n                                                Edit\n                                            </Button> */}\n\n                                            <FaPen\n                                                className={styles.etitIcon}\n                                                onClick={() => updateHandle(article)}\n                                            />\n                                            {/*    <Button className={styles.btnEditeAndDelete} variant=\"outline-danger\"\n                                                onClick={() => deleteArticle(article._id)}\n                                            >\n                                                Delete\n                                            </Button> */}\n                                            <FaTrashAlt\n                                                className={styles.deleteIcon}\n                                                onClick={() => deleteArticle(article._id)}\n                                            />\n                                        </div>\n                                        : <div></div>}\n                                    {/* } */}\n\n\n                                </Card.Body>\n                            </Card>\n\n                        )\n                    })}\n                </Col>\n            </Row>\n\n\n        </Container>\n    )\n}\n\nexport default CreateArticle;","/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Loading/Loading.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Arrows/Arrows.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Buttons/LikeBtn/LikeBtn.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/final-project/frontend/src/components/Buttons/RecipeBtn/RecipeBtn.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/index.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/App.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/NavMenu.js",["377","378"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/Pages/BmiPage.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/NutritionAnalysis.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Footer/Footer.js",["379"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Navbar/Pages/Articles.js",["380"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/Recipes/Recipes.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/ReadMore/ReadMore.js",["381"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/Home.js",["382","383","384","385","386","387"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Account/LogIn/LogIn.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Account/Register/Register.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/BarChart.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/NutritionAnalysis/DonoutDiagram.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/SliderData.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/ImageSlider.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Home/imgApp.js",["388","389"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/BmiComponent/BmiComponent.js",["390","391"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Loading/Loading.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Recipes/SearchBar/SearchBar.js",["392"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/Article/Article.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/CreateArticle/CreateArticle.js",["393","394","395"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Articles/AllArticles/AllArticles.js",["396"],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Arrows/Arrows.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Buttons/LikeBtn/LikeBtn.js",[],"/home/dci/Desktop/AllAufgaben/mywunderbar/Github push/gh-Final_projekt/frontend/src/components/Buttons/RecipeBtn/RecipeBtn.js",[],{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","severity":1,"message":"402","line":106,"column":33,"nodeType":"403","endLine":107,"endColumn":64},{"ruleId":"404","severity":1,"message":"405","line":7,"column":10,"nodeType":"406","messageId":"407","endLine":7,"endColumn":22},{"ruleId":"404","severity":1,"message":"408","line":12,"column":27,"nodeType":"406","messageId":"407","endLine":12,"endColumn":36},{"ruleId":"404","severity":1,"message":"409","line":15,"column":12,"nodeType":"406","messageId":"407","endLine":15,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":19,"column":8,"nodeType":"412","endLine":19,"endColumn":10,"suggestions":"413"},{"ruleId":"404","severity":1,"message":"414","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":22},{"ruleId":"404","severity":1,"message":"415","line":20,"column":13,"nodeType":"406","messageId":"407","endLine":20,"endColumn":25},{"ruleId":"404","severity":1,"message":"408","line":20,"column":27,"nodeType":"406","messageId":"407","endLine":20,"endColumn":36},{"ruleId":"404","severity":1,"message":"416","line":5,"column":24,"nodeType":"406","messageId":"407","endLine":5,"endColumn":43},{"ruleId":"417","severity":1,"message":"418","line":115,"column":28,"nodeType":"419","messageId":"420","endLine":115,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":115,"column":55,"nodeType":"419","messageId":"420","endLine":115,"endColumn":57},{"ruleId":"417","severity":1,"message":"418","line":129,"column":28,"nodeType":"419","messageId":"420","endLine":129,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":129,"column":50,"nodeType":"419","messageId":"420","endLine":129,"endColumn":52},{"ruleId":"417","severity":1,"message":"418","line":145,"column":28,"nodeType":"419","messageId":"420","endLine":145,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":145,"column":54,"nodeType":"419","messageId":"420","endLine":145,"endColumn":56},{"ruleId":"397","replacedBy":"421"},{"ruleId":"399","replacedBy":"422"},{"ruleId":"404","severity":1,"message":"423","line":49,"column":19,"nodeType":"406","messageId":"407","endLine":49,"endColumn":27},{"ruleId":"404","severity":1,"message":"424","line":3,"column":17,"nodeType":"406","messageId":"407","endLine":3,"endColumn":25},{"ruleId":"425","severity":1,"message":"426","line":35,"column":25,"nodeType":"403","endLine":35,"endColumn":97},{"ruleId":"410","severity":1,"message":"427","line":16,"column":8,"nodeType":"412","endLine":16,"endColumn":10,"suggestions":"428"},{"ruleId":"404","severity":1,"message":"429","line":27,"column":10,"nodeType":"406","messageId":"407","endLine":27,"endColumn":17},{"ruleId":"404","severity":1,"message":"430","line":22,"column":12,"nodeType":"406","messageId":"407","endLine":22,"endColumn":20},{"ruleId":"404","severity":1,"message":"431","line":22,"column":22,"nodeType":"406","messageId":"407","endLine":22,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":13,"column":53,"nodeType":"434","messageId":"435","endLine":13,"endColumn":82},{"ruleId":"404","severity":1,"message":"436","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":17},{"ruleId":"404","severity":1,"message":"437","line":10,"column":8,"nodeType":"406","messageId":"407","endLine":10,"endColumn":11},{"ruleId":"404","severity":1,"message":"408","line":12,"column":27,"nodeType":"406","messageId":"407","endLine":12,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":117,"column":33,"nodeType":"403","endLine":118,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":19,"column":8,"nodeType":"412","endLine":19,"endColumn":10,"suggestions":"438"},{"ruleId":"404","severity":1,"message":"439","line":10,"column":14,"nodeType":"406","messageId":"407","endLine":10,"endColumn":25},{"ruleId":"440","severity":1,"message":"441","line":184,"column":17,"nodeType":"403","messageId":"442","endLine":187,"endColumn":18,"fix":"443"},{"ruleId":"440","severity":1,"message":"441","line":193,"column":17,"nodeType":"403","messageId":"442","endLine":193,"endColumn":69,"fix":"444"},{"ruleId":"440","severity":1,"message":"441","line":208,"column":17,"nodeType":"403","messageId":"442","endLine":211,"endColumn":18,"fix":"445"},{"ruleId":"440","severity":1,"message":"441","line":217,"column":17,"nodeType":"403","messageId":"442","endLine":217,"endColumn":78,"fix":"446"},{"ruleId":"440","severity":1,"message":"441","line":232,"column":17,"nodeType":"403","messageId":"442","endLine":235,"endColumn":18,"fix":"447"},{"ruleId":"440","severity":1,"message":"441","line":241,"column":17,"nodeType":"403","messageId":"442","endLine":241,"endColumn":67,"fix":"448"},{"ruleId":"404","severity":1,"message":"449","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":14},{"ruleId":"404","severity":1,"message":"450","line":8,"column":16,"nodeType":"406","messageId":"407","endLine":8,"endColumn":22},{"ruleId":"410","severity":1,"message":"427","line":17,"column":8,"nodeType":"412","endLine":17,"endColumn":10,"suggestions":"451"},{"ruleId":"404","severity":1,"message":"449","line":2,"column":8,"nodeType":"406","messageId":"407","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"452","line":8,"column":8,"nodeType":"406","messageId":"407","endLine":8,"endColumn":15},{"ruleId":"410","severity":1,"message":"453","line":21,"column":8,"nodeType":"412","endLine":21,"endColumn":10,"suggestions":"454"},{"ruleId":"404","severity":1,"message":"449","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},{"ruleId":"404","severity":1,"message":"449","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"404","severity":1,"message":"455","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":17},{"ruleId":"404","severity":1,"message":"456","line":37,"column":12,"nodeType":"406","messageId":"407","endLine":37,"endColumn":24},{"ruleId":"404","severity":1,"message":"408","line":12,"column":27,"nodeType":"406","messageId":"407","endLine":12,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":117,"column":33,"nodeType":"403","endLine":118,"endColumn":64},{"ruleId":"404","severity":1,"message":"439","line":10,"column":14,"nodeType":"406","messageId":"407","endLine":10,"endColumn":25},{"ruleId":"410","severity":1,"message":"411","line":19,"column":8,"nodeType":"412","endLine":19,"endColumn":10,"suggestions":"457"},{"ruleId":"404","severity":1,"message":"449","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":14},{"ruleId":"440","severity":1,"message":"441","line":184,"column":17,"nodeType":"403","messageId":"442","endLine":187,"endColumn":18,"fix":"458"},{"ruleId":"440","severity":1,"message":"441","line":193,"column":17,"nodeType":"403","messageId":"442","endLine":193,"endColumn":69,"fix":"459"},{"ruleId":"440","severity":1,"message":"441","line":208,"column":17,"nodeType":"403","messageId":"442","endLine":211,"endColumn":18,"fix":"460"},{"ruleId":"440","severity":1,"message":"441","line":217,"column":17,"nodeType":"403","messageId":"442","endLine":217,"endColumn":78,"fix":"461"},{"ruleId":"440","severity":1,"message":"441","line":232,"column":17,"nodeType":"403","messageId":"442","endLine":235,"endColumn":18,"fix":"462"},{"ruleId":"440","severity":1,"message":"441","line":241,"column":17,"nodeType":"403","messageId":"442","endLine":241,"endColumn":67,"fix":"463"},{"ruleId":"404","severity":1,"message":"450","line":8,"column":16,"nodeType":"406","messageId":"407","endLine":8,"endColumn":22},{"ruleId":"410","severity":1,"message":"427","line":17,"column":8,"nodeType":"412","endLine":17,"endColumn":10,"suggestions":"464"},{"ruleId":"404","severity":1,"message":"449","line":2,"column":8,"nodeType":"406","messageId":"407","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"452","line":8,"column":8,"nodeType":"406","messageId":"407","endLine":8,"endColumn":15},{"ruleId":"410","severity":1,"message":"453","line":21,"column":8,"nodeType":"412","endLine":21,"endColumn":10,"suggestions":"465"},{"ruleId":"404","severity":1,"message":"449","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"404","severity":1,"message":"455","line":12,"column":10,"nodeType":"406","messageId":"407","endLine":12,"endColumn":17},{"ruleId":"404","severity":1,"message":"456","line":37,"column":12,"nodeType":"406","messageId":"407","endLine":37,"endColumn":24},{"ruleId":"404","severity":1,"message":"449","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},"no-native-reassign",["466"],"no-negated-in-lhs",["467"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'FaDoorClosed' is defined but never used.","Identifier","unusedVar","'isExpired' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getArticlesData'. Either include it or remove the dependency array.","ArrayExpression",["468"],"'FaPlusCircle' is defined but never used.","'decodedToken' is assigned a value but never used.","'GiConsoleController' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["466"],["467"],"'userJson' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'callback' and 'interval'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["469"],"'usePath' is defined but never used.","'rightMsg' is assigned a value but never used.","'setRightMsg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Container' is defined but never used.","'img' is defined but never used.",["470"],"'handleClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"471","text":"472"},{"range":"473","text":"472"},{"range":"474","text":"472"},{"range":"475","text":"472"},{"range":"476","text":"472"},{"range":"477","text":"472"},"'Button' is defined but never used.","'uuidv4' is defined but never used.",["478"],"'LikeBtn' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setFilteredData' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.",["479"],"'FaTimes' is defined but never used.","'imageUpdated' is assigned a value but never used.",["480"],{"range":"481","text":"472"},{"range":"482","text":"472"},{"range":"483","text":"472"},{"range":"484","text":"472"},{"range":"485","text":"472"},{"range":"486","text":"472"},["487"],["488"],"no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"489","fix":"493"},[8414,8414]," rel=\"noreferrer\"",[8658,8658],[9201,9201],[9464,9464],[10006,10006],[10248,10248],{"desc":"491","fix":"494"},{"desc":"495","fix":"496"},{"desc":"489","fix":"497"},[8414,8414],[8658,8658],[9201,9201],[9464,9464],[10006,10006],[10248,10248],{"desc":"491","fix":"498"},{"desc":"495","fix":"499"},"Update the dependencies array to be: [getArticlesData]",{"range":"500","text":"501"},"Update the dependencies array to be: [callback, interval]",{"range":"502","text":"503"},{"range":"504","text":"501"},{"range":"505","text":"503"},"Update the dependencies array to be: [data]",{"range":"506","text":"507"},{"range":"508","text":"501"},{"range":"509","text":"503"},{"range":"510","text":"507"},[660,662],"[getArticlesData]",[532,534],"[callback, interval]",[645,647],[569,571],[728,730],"[data]",[645,647],[569,571],[728,730]]