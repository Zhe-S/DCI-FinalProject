{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport styles from './AllArticles.module.scss';\n/* import { FaLongArrowAltRight } from \"react-icons/fa\"; \n\nFaLongArrowAltRight\nFaRegArrowAltCircleRight\n*/\n\nimport { FaRegArrowAltCircleRight } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n/* import { useState, useEffect } from \"react\"; */\n\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport de from 'javascript-time-ago/locale/en';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllArticles = ({\n  data\n}) => {\n  TimeAgo.addDefaultLocale(de);\n\n  const convertToCamelCase = word => {\n    return word[0].toUpperCase() + word.slice(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: [styles.containerArticle, 'bg-light'].join(' '),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"All Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: [styles.rowArticle, \"justify-content-md-center\"].join(' '),\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-article\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.btnAddArticle,\n          variant: \"outline-success\",\n          children: \"Add New Article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), data.map(article => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          className: styles.colArticle,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.cardArticle,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.articleAndUserImages,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                  state: {\n                    article,\n                    author: article.userId.firstName + ' ' + article.userId.lastName,\n                    img: article.userId.image\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.imgArticleDiv,\n                  children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                    className: styles === null || styles === void 0 ? void 0 : styles.imgArticle,\n                    variant: \"top\",\n                    src: article.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.containerDataUser,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.imgUserDiv,\n                  children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                    className: styles.imgUser,\n                    variant: \"top\",\n                    src: article.userId.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: styles.textUser,\n                  children: convertToCamelCase(article.userId.firstName) + ' ' + convertToCamelCase(article.userId.lastName)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: styles.textTime,\n                  children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                    date: article.createDate,\n                    locale: \"en-En\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: styles.cardBody,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                  state: {\n                    article,\n                    author: article.userId.firstName + ' ' + article.userId.lastName,\n                    img: article.userId.image\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: styles.titleArticle,\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: styles.textStyle,\n                children: article.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.likeDetails,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FaRegArrowAltCircleRight, {\n                    color: \"darkcyan\",\n                    size: \"20px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                    state: {\n                      article,\n                      author: article.userId.firstName + ' ' + article.userId.lastName,\n                      img: article.userId.image\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.readMore,\n                    children: \"Read More\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AllArticles;\nexport default AllArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllArticles\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Articles/AllArticles/AllArticles.js"],"names":["Card","Col","Row","Button","Container","styles","FaRegArrowAltCircleRight","Link","TimeAgo","ReactTimeAgo","de","AllArticles","data","addDefaultLocale","convertToCamelCase","word","toUpperCase","slice","containerArticle","join","rowArticle","btnAddArticle","map","article","colArticle","cardArticle","articleAndUserImages","pathname","title","replace","state","author","userId","firstName","lastName","img","image","imgArticleDiv","imgArticle","containerDataUser","imgUserDiv","imgUser","textUser","textTime","createDate","cardBody","titleArticle","textStyle","text","likeDetails","readMore"],"mappings":"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","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport styles from './AllArticles.module.scss';\n/* import { FaLongArrowAltRight } from \"react-icons/fa\"; \n\nFaLongArrowAltRight\nFaRegArrowAltCircleRight\n*/\nimport { FaRegArrowAltCircleRight } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n/* import { useState, useEffect } from \"react\"; */\nimport TimeAgo from 'javascript-time-ago';\nimport ReactTimeAgo from 'react-time-ago';\nimport de from 'javascript-time-ago/locale/en';\n\nconst AllArticles = ({ data }) => {\n\n    TimeAgo.addDefaultLocale(de);\n\n    const convertToCamelCase = (word) => {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n    return (\n\n        <Container className={[styles.containerArticle, 'bg-light'].join(' ')}>\n            <h2 className='text-center'>All Articles</h2>\n\n            <Row className={[styles.rowArticle, \"justify-content-md-center\"].join(' ')}>\n                <Link to='/create-article'>\n                    <Button className={styles.btnAddArticle}\n                        variant=\"outline-success\"\n                    >\n                        Add New Article\n                    </Button>\n                </Link>\n\n\n                {data.map(article => {\n                    return (\n                        <Col md=\"auto\" className={styles.colArticle}>\n                            <Card className={styles.cardArticle}>\n                                <div className={styles.articleAndUserImages}>\n                                    <Link to={{\n                                        pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                        state: {\n                                            article,\n                                            author: article.userId.firstName + ' ' + article.userId.lastName,\n                                            img: article.userId.image\n                                        }\n                                    }}>\n                                        <div className={styles.imgArticleDiv}>\n                                            <Card.Img className={styles?.imgArticle} variant=\"top\" src={article.image} />\n\n                                        </div>\n\n\n\n                                    </Link>\n\n\n                                    <div className={styles.containerDataUser}>\n                                        <div className={styles.imgUserDiv}>\n                                            <Card.Img className={styles.imgUser} variant=\"top\" src={article.userId.image} />\n                                        </div>\n\n                                        <Card.Text className={styles.textUser}>\n                                            {\n                                                convertToCamelCase(article.userId.firstName) + ' ' +\n                                                convertToCamelCase(article.userId.lastName)\n                                            }\n\n                                        </Card.Text>\n\n                                        <Card.Text className={styles.textTime}>\n                                            <ReactTimeAgo date={article.createDate} locale=\"en-En\" />\n                                        </Card.Text>\n\n                                    </div>\n                                </div>\n                                <Card.Body className={styles.cardBody}>\n                                    <Link to={{\n                                        pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                        state: {\n                                            article,\n                                            author: article.userId.firstName + ' ' + article.userId.lastName,\n                                            img: article.userId.image\n                                        }\n                                    }}>\n                                        <Card.Title className={styles.titleArticle}>\n                                            {article.title}\n                                        </Card.Title>\n                                    </Link >\n                                    <Card.Text className={styles.textStyle}>\n                                        {article.text}\n                                    </Card.Text>\n\n                                    <div className={styles.likeDetails}>\n                                        <div>\n                                            <FaRegArrowAltCircleRight color=\"darkcyan\" size=\"20px\" />\n                                        </div>\n\n\n                                        <Link to={{\n                                            pathname: `/article/${article.title.replace(/ /g, '-')}`,\n                                            state: {\n                                                article,\n                                                author: article.userId.firstName + ' ' + article.userId.lastName,\n                                                img: article.userId.image\n                                            }\n                                        }}>\n\n                                            <div className={styles.readMore}>Read More</div>\n                                        </Link>\n                                    </div>\n\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    )\n                })}\n\n            </Row>\n\n        </Container >\n\n\n    )\n\n}\n\n\n\nexport default AllArticles;"]},"metadata":{},"sourceType":"module"}