{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Articles.js\",\n    _s = $RefreshSig$();\n\nimport CreateArticle from \"../../Articles/CreateArticle/CreateArticle\";\nimport Article from \"../../Articles/Article/Article\";\nimport AllArticles from \"../../Articles/AllArticles/AllArticles\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useJwt } from \"react-jwt\";\nimport { FaDoorClosed } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"food-token\");\n\nconst Articles = () => {\n  _s();\n\n  const {\n    decodedToken,\n    isExpired\n  } = useJwt(token);\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getArticlesData();\n  }, []);\n  useEffect(() => {//onsole.log('article hat sich verÃ¤ndert', articles)\n  }, [articles]);\n\n  const getArticlesData = async () => {\n    const data = await fetch(\"http://localhost:3369/articles\");\n    const res = await data.json();\n    /*  console.log(\"articles in fetch\", res) */\n\n    setArticles(res.reverse());\n    console.log(\"articles in articles Data: \", res);\n  };\n\n  const addNewArticle = async newArticle => {\n    console.time(\"Test\");\n    newArticle.userId = decodedToken.id;\n    setLoading(true);\n    const res = await fetch('http://localhost:3369/articles', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newArticle)\n    }); // TODO IF YOUR REALLY WANN RELOAD location.reload();\n\n    console.log(\"newArticle: \", newArticle);\n    const newArticleApi = await res.json();\n    console.log(\"newArticleApi: \", newArticleApi);\n    const upditArticle = [newArticleApi, ...articles];\n    setArticles(upditArticle);\n    console.timeEnd(\"Test\");\n    setLoading(false);\n  };\n\n  const deleteArticle = async id => {\n    const deleteUrl = `http://localhost:3369/articles/${id}`;\n    const res = await fetch(deleteUrl, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': localStorage.getItem(\"food-token\") || \"\"\n      }\n    });\n    const result = await res.json();\n\n    if (result.err) {\n      alert('This Article is not for you');\n    } else {\n      const articlesDeleteUpate = articles.filter(article => article._id !== id);\n      setArticles(articlesDeleteUpate);\n    }\n  };\n\n  const updateArticle = async (id, artUpdate) => {\n    const updateUrl = `http://localhost:3369/articles/${id}`;\n    const res = await fetch(updateUrl, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem(\"food-token\") || \"\"\n      },\n      body: JSON.stringify(artUpdate)\n    });\n    const result = await res.json();\n\n    if (result.err) {\n      alert('This Article is not for you');\n    }\n\n    console.log(result); // const newArticleApi = await res.json();\n    // console.log('newArticleApi', newArticleApi)\n    // const ArticleUpdated = articles.map(article => article._id === id ? artUpdate : article);\n    // setArticles(ArticleUpdated)\n    // console.log(\"state set: \", articles)\n\n    getArticlesData();\n  };\n  /*     const getArticleById = (id) => {\n  \n          const article = articles.find(art => art._id === id);\n          console.log('article => ', article)\n          return article;\n      } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/articles\",\n        children: /*#__PURE__*/_jsxDEV(AllArticles, {\n          data: articles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-article\",\n        children: /*#__PURE__*/_jsxDEV(CreateArticle, {\n          data: articles,\n          addNewArticle: addNewArticle,\n          deleteArticle: deleteArticle,\n          updateArticle: updateArticle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/article/:title\",\n        component: Article\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Articles, \"Pr2JdrkBBABHnbRw8fcalyg4adw=\", false, function () {\n  return [useJwt];\n});\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Navbar/Pages/Articles.js"],"names":["CreateArticle","Article","AllArticles","useState","useEffect","Route","Switch","useJwt","FaDoorClosed","token","localStorage","getItem","Articles","decodedToken","isExpired","articles","setArticles","loading","setLoading","getArticlesData","data","fetch","res","json","reverse","console","log","addNewArticle","newArticle","time","userId","id","method","mode","headers","body","JSON","stringify","newArticleApi","upditArticle","timeEnd","deleteArticle","deleteUrl","result","err","alert","articlesDeleteUpate","filter","article","_id","updateArticle","artUpdate","updateUrl"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,4CAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA8BP,MAAM,CAACE,KAAD,CAA1C;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM,CACZ;AAGH,GAJQ,EAIN,CAACW,QAAD,CAJM,CAAT;;AAMA,QAAMI,eAAe,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAxB;AACA,UAAMC,GAAG,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAlB;AAEA;;AACAP,IAAAA,WAAW,CAACM,GAAG,CAACE,OAAJ,EAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CJ,GAA3C;AACH,GAPD;;AASA,QAAMK,aAAa,GAAG,MAAOC,UAAP,IAAsB;AACxCH,IAAAA,OAAO,CAACI,IAAR,CAAa,MAAb;AACAD,IAAAA,UAAU,CAACE,MAAX,GAAoBjB,YAAY,CAACkB,EAAjC;AACAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMI,GAAG,GAAG,MAAMD,KAAK,CAAC,gCAAD,EAAmC;AACtDW,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,IAAI,EAAE,MAFgD;AAGtDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAH6C;AAItDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf;AAJgD,KAAnC,CAAvB,CAJwC,CAUxC;;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,UAA5B;AACA,UAAMU,aAAa,GAAG,MAAMhB,GAAG,CAACC,IAAJ,EAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BY,aAA/B;AACA,UAAMC,YAAY,GAAG,CAACD,aAAD,EAAgB,GAAGvB,QAAnB,CAArB;AACAC,IAAAA,WAAW,CAACuB,YAAD,CAAX;AACAd,IAAAA,OAAO,CAACe,OAAR,CAAgB,MAAhB;AACAtB,IAAAA,UAAU,CAAC,KAAD,CAAV;AAGH,GArBD;;AAuBA,QAAMuB,aAAa,GAAG,MAAOV,EAAP,IAAc;AAChC,UAAMW,SAAS,GAAI,kCAAiCX,EAAG,EAAvD;AACA,UAAMT,GAAG,GAAG,MAAMD,KAAK,CAACqB,SAAD,EAAY;AAC/BV,MAAAA,MAAM,EAAE,QADuB;AAE/BE,MAAAA,OAAO,EAAE;AACL,yBAAiBxB,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC;AADlD;AAFsB,KAAZ,CAAvB;AAMA,UAAMgC,MAAM,GAAG,MAAMrB,GAAG,CAACC,IAAJ,EAArB;;AACA,QAAIoB,MAAM,CAACC,GAAX,EAAgB;AACZC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,KAFD,MAEO;AACH,YAAMC,mBAAmB,GAAG/B,QAAQ,CAACgC,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBlB,EAA3C,CAA5B;AACAf,MAAAA,WAAW,CAAC8B,mBAAD,CAAX;AACH;AAEJ,GAhBD;;AAkBA,QAAMI,aAAa,GAAG,OAAOnB,EAAP,EAAWoB,SAAX,KAAyB;AAC3C,UAAMC,SAAS,GAAI,kCAAiCrB,EAAG,EAAvD;AAEA,UAAMT,GAAG,GAAG,MAAMD,KAAK,CAAC+B,SAAD,EAAY;AAC/BpB,MAAAA,MAAM,EAAE,KADuB;AAE/BE,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBxB,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC;AAFlD,OAFsB;AAO/BwB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAec,SAAf;AAPyB,KAAZ,CAAvB;AAWA,UAAMR,MAAM,GAAG,MAAMrB,GAAG,CAACC,IAAJ,EAArB;;AACA,QAAIoB,MAAM,CAACC,GAAX,EAAgB;AACZC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;;AACDpB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ,EAlB2C,CAmB3C;AACA;AACA;AACA;AACA;;AAEAxB,IAAAA,eAAe;AAClB,GA1BD;AA4BA;AACJ;AACA;AACA;AACA;AACA;;;AAEI,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,IAAI,EAAEJ;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAAA,+BAEI,QAAC,aAAD;AACI,UAAA,IAAI,EAAEA,QADV;AAGI,UAAA,aAAa,EAAEY,aAHnB;AAII,UAAA,aAAa,EAAEc,aAJnB;AAKI,UAAA,aAAa,EAAES;AALnB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAoBI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAA8B,QAAA,SAAS,EAAEjD;AAAzC;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CApID;;GAAMW,Q;UACkCL,M;;;KADlCK,Q;AAqIN,eAAeA,QAAf","sourcesContent":["import CreateArticle from \"../../Articles/CreateArticle/CreateArticle\";\nimport Article from \"../../Articles/Article/Article\";\nimport AllArticles from \"../../Articles/AllArticles/AllArticles\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useJwt } from \"react-jwt\";\nimport { FaDoorClosed } from \"react-icons/fa\";\n\nconst token = localStorage.getItem(\"food-token\")\n\nconst Articles = () => {\n    const { decodedToken, isExpired } = useJwt(token);\n\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getArticlesData();\n    }, [])\n\n    useEffect(() => {\n        //onsole.log('article hat sich verÃ¤ndert', articles)\n\n\n    }, [articles])\n\n    const getArticlesData = async () => {\n        const data = await fetch(\"http://localhost:3369/articles\");\n        const res = await data.json();\n\n        /*  console.log(\"articles in fetch\", res) */\n        setArticles(res.reverse());\n        console.log(\"articles in articles Data: \", res)\n    }\n\n    const addNewArticle = async (newArticle) => {\n        console.time(\"Test\")\n        newArticle.userId = decodedToken.id;\n        setLoading(true)\n        const res = await fetch('http://localhost:3369/articles', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newArticle)\n        });\n        // TODO IF YOUR REALLY WANN RELOAD location.reload();\n\n        console.log(\"newArticle: \", newArticle);\n        const newArticleApi = await res.json();\n        console.log(\"newArticleApi: \", newArticleApi);\n        const upditArticle = [newArticleApi, ...articles]\n        setArticles(upditArticle)\n        console.timeEnd(\"Test\")\n        setLoading(false)\n\n\n    }\n\n    const deleteArticle = async (id) => {\n        const deleteUrl = `http://localhost:3369/articles/${id}`;\n        const res = await fetch(deleteUrl, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            }\n        });\n        const result = await res.json();\n        if (result.err) {\n            alert('This Article is not for you');\n        } else {\n            const articlesDeleteUpate = articles.filter(article => article._id !== id)\n            setArticles(articlesDeleteUpate);\n        }\n\n    }\n\n    const updateArticle = async (id, artUpdate) => {\n        const updateUrl = `http://localhost:3369/articles/${id}`;\n\n        const res = await fetch(updateUrl, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem(\"food-token\") || \"\"\n            },\n\n            body: JSON.stringify(artUpdate)\n\n        });\n\n        const result = await res.json();\n        if (result.err) {\n            alert('This Article is not for you');\n        }\n        console.log(result);\n        // const newArticleApi = await res.json();\n        // console.log('newArticleApi', newArticleApi)\n        // const ArticleUpdated = articles.map(article => article._id === id ? artUpdate : article);\n        // setArticles(ArticleUpdated)\n        // console.log(\"state set: \", articles)\n\n        getArticlesData();\n    }\n\n    /*     const getArticleById = (id) => {\n    \n            const article = articles.find(art => art._id === id);\n            console.log('article => ', article)\n            return article;\n        } */\n\n    return (\n        <div >\n            <Switch>\n                <Route path='/articles'>\n                    <AllArticles\n                        data={articles}\n\n                    />\n                </Route>\n\n                <Route path='/create-article'>\n\n                    <CreateArticle\n                        data={articles}\n\n                        addNewArticle={addNewArticle}\n                        deleteArticle={deleteArticle}\n                        updateArticle={updateArticle}\n                    />\n                </Route>\n\n\n                <Route path='/article/:title' component={Article}>\n                    {/*   <Article getArticleById={getArticleById} /> */}\n                </Route>\n\n            </Switch>\n\n\n        </div>\n    )\n}\nexport default Articles;"]},"metadata":{},"sourceType":"module"}