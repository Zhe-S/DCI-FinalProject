{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Register.js\",\n    _s = $RefreshSig$();\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport image from './123.jpg';\nimport styles from './Register.module.scss';\nimport { MdEmail } from \"react-icons/md\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [file, setFile] = useState(null);\n  const [user, setUser] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n\n  const togglePasswordVisiblity = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const fileChangeHandler = event => {\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(event.target.files[0]);\n\n    fileReader.onloadend = () => {\n      let [file] = event.target.files;\n\n      if (file) {\n        setPreviewImageSrc(URL.createObjectURL(file));\n      }\n\n      const base64ImageUrl = fileReader.result;\n      setFile(base64ImageUrl);\n    };\n  };\n\n  const handleSubmitPassword = event => {\n    event.preventDefault();\n\n    if (password !== passwordConfirm) {\n      setErrorMsg('The two passwords must be the same');\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      image: file\n    };\n    const res = await fetch('http://localhost:3369/users', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    });\n    const jsonResponse = await res.text();\n\n    if (jsonResponse === 'es gibt schon den user oder die email') {\n      setErrorMsg('User or Email already exists!');\n    } else if (jsonResponse === 'Email war falsch') {\n      setErrorMsg('Write the Email correctly!');\n    } else if (jsonResponse === 'das Passwort ist nicht valide') {\n      setErrorMsg('Password should be at least 10 characters and contains one Capital letter ,one special letter like @&?$ etc!');\n    } else {\n      window.location = '/login';\n    }\n\n    setUser(newUser);\n    setFirstName('');\n    setlastName('');\n    setEmail('');\n    setPassword('');\n    setPasswordConfirm('');\n    setPreviewImageSrc('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.redister,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center p-4 img-cover shadow \",\n        style: {\n          backgroundImage: `url(${image})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          Form: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.imageUserDiv,\n            style: {\n              backgroundColor: 'white'\n            },\n            children: previewImageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.imageUser,\n              src: previewImageSrc,\n              alt: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 48\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-5\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.addFotoBtn,\n              children: [\"Add Foto\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: styles.btnFile,\n                type: \"file\",\n                onChange: fileChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-1 \",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"exampleForm.ControlInput1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Firstname:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border-start-0 border-top-0 border-end-0\",\n                type: \"text\",\n                placeholder: \"Enter your Name\",\n                value: firstName,\n                onChange: e => setFirstName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"exampleForm.ControlInput1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Lastname:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter your Name\",\n                value: lastName,\n                onChange: e => setlastName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-1\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.icons,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MdEmail, {\n                className: styles.mailIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-1\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.icons,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Password\",\n                className: \"border-start-0 border-top-0 border-end-0\",\n                type: isPasswordShown ? \"text\" : \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: styles.passwordIcon,\n                onClick: togglePasswordVisiblity,\n                children: isPasswordShown ? /*#__PURE__*/_jsxDEV(BsEyeSlash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 56\n                }, this) : /*#__PURE__*/_jsxDEV(BsEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-1\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.icons,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Password\",\n                type: isPasswordShown ? \"text\" : \"password\",\n                value: passwordConfirm,\n                onChange: e => setPasswordConfirm(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: styles.passwordIcon,\n                onClick: () => setIsPasswordShown(!isPasswordShown),\n                children: isPasswordShown ? /*#__PURE__*/_jsxDEV(BsEyeSlash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 56\n                }, this) : /*#__PURE__*/_jsxDEV(BsEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.massgeErr,\n            children: [\" \", errorMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"shadow mt-5 btn-md\",\n              variant: \"secondary\",\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"CMRrYpQ5wNXbhEyHRM0nr9EMO8M=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dci/Desktop/AllAufgaben/Final Projekt/final-project/frontend/src/components/Account/Register.js"],"names":["Button","Form","Row","Col","image","styles","MdEmail","BsEye","BsEyeSlash","React","useState","Register","isPasswordShown","setIsPasswordShown","firstName","setFirstName","lastName","setlastName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","file","setFile","user","setUser","errorMsg","setErrorMsg","previewImageSrc","setPreviewImageSrc","togglePasswordVisiblity","fileChangeHandler","event","fileReader","FileReader","readAsDataURL","target","files","onloadend","URL","createObjectURL","base64ImageUrl","result","handleSubmitPassword","preventDefault","handleSubmit","newUser","res","fetch","method","mode","headers","body","JSON","stringify","jsonResponse","text","window","location","redister","backgroundImage","imageUserDiv","backgroundColor","imageUser","addFotoBtn","btnFile","e","value","icons","mailIcon","passwordIcon","massgeErr"],"mappings":"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","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport image from './123.jpg';\nimport styles from './Register.module.scss';\n\n\nimport { MdEmail } from \"react-icons/md\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\n\nimport { React, useState } from 'react';\n\nconst Register = () => {\n\n\n    const [isPasswordShown, setIsPasswordShown] = useState(false);\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setlastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [file, setFile] = useState(null);\n    const [user, setUser] = useState([]);\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const [previewImageSrc, setPreviewImageSrc] = useState(\"\");\n\n\n    const togglePasswordVisiblity = () => {\n        setIsPasswordShown(!isPasswordShown);\n    }\n\n    const fileChangeHandler = (event) => {\n        let fileReader = new FileReader();\n        fileReader.readAsDataURL(event.target.files[0])\n        fileReader.onloadend = () => {\n\n            let [file] = event.target.files;\n            if (file) {\n                setPreviewImageSrc(URL.createObjectURL(file))\n            }\n\n            const base64ImageUrl = fileReader.result;\n\n\n            setFile(base64ImageUrl)\n        }\n    }\n\n    const handleSubmitPassword = (event) => {\n        event.preventDefault();\n        if (password !== passwordConfirm) {\n            setErrorMsg('The two passwords must be the same');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const newUser = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            image: file\n        }\n\n        const res = await fetch('http://localhost:3369/users', {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newUser)\n\n        });\n\n        const jsonResponse = await res.text();\n\n        if (jsonResponse === 'es gibt schon den user oder die email') {\n            setErrorMsg('User or Email already exists!');\n        } else if (jsonResponse === 'Email war falsch') {\n            setErrorMsg('Write the Email correctly!');\n        } else if (jsonResponse === 'das Passwort ist nicht valide') {\n            setErrorMsg('Password should be at least 10 characters and contains one Capital letter ,one special letter like @&?$ etc!');\n        } else {\n            window.location = '/login';\n        }\n\n\n        setUser(newUser)\n        setFirstName('');\n        setlastName('');\n        setEmail('');\n        setPassword('');\n        setPasswordConfirm('');\n        setPreviewImageSrc('');\n    }\n\n    return (\n        <div className='container'>\n            <div className={styles.redister}>\n\n\n                <div className=\"center p-4 img-cover shadow \" style={{ backgroundImage: `url(${image})` }}>\n\n\n                    <Form Form onSubmit={handleSubmit}>\n                        <div className={styles.imageUserDiv} style={{ backgroundColor: 'white' }}>\n\n                            {previewImageSrc ? <img className={styles.imageUser} src={previewImageSrc} alt=\"test\" /> : null}\n                        </div>\n\n                        <Form.Group controlId=\"formFile\" className=\"mb-5\">\n                           \n\n                            <Button className={styles.addFotoBtn} >\n                                Add Foto\n                                <Form.Control className={styles.btnFile}\n                                    type=\"file\"\n                                    onChange={fileChangeHandler}\n                                />\n                            </Button>\n\n\n\n                        </Form.Group>\n                        <Row className=\"mb-1 \">\n                            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Firstname:</Form.Label>\n                                <Form.Control\n                                    className='border-start-0 border-top-0 border-end-0'\n                                    type=\"text\"\n                                    placeholder=\"Enter your Name\"\n\n                                    value={firstName}\n                                    onChange={(e) => setFirstName(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Lastname:</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter your Name\"\n                                    value={lastName}\n                                    onChange={(e) => setlastName(e.target.value)}\n\n                                />\n                            </Form.Group>\n                        </Row>\n\n                        <Form.Group className=\"mb-1\" controlId=\"formBasicPassword\">\n                            <Form.Label>Email address  </Form.Label>\n                            <div className={styles.icons}>\n                                <Form.Control type=\"email\"\n                                    placeholder=\"Enter email\"\n\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n\n                                />\n                                <MdEmail className={styles.mailIcon} />\n                            </div>\n                        </Form.Group>\n\n\n\n\n\n                        <Form.Group className=\"mb-1\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password  </Form.Label>\n                            <div className={styles.icons}>\n                                <Form.Control\n                                    placeholder=\"Password\"\n                                    className='border-start-0 border-top-0 border-end-0'\n                                    type={(isPasswordShown) ? \"text\" : \"password\"}\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n\n                                />\n\n                                <i\n                                    className={styles.passwordIcon}\n                                    onClick={togglePasswordVisiblity}\n                                >\n                                    {isPasswordShown ? <BsEyeSlash /> : <BsEye />}\n                                </i>\n                            </div>\n                        </Form.Group>\n\n\n                        <Form.Group className=\"mb-1\" controlId=\"formBasicPassword\">\n                            <Form.Label>Confirm Password  </Form.Label>\n\n\n                            <div className={styles.icons}>\n                                <Form.Control\n                                    placeholder=\"Password\"\n                                    type={(isPasswordShown) ? \"text\" : \"password\"}\n                                    value={passwordConfirm}\n                                    onChange={(e) => setPasswordConfirm(e.target.value)}\n\n                                />\n\n\n\n                                <i\n                                    className={styles.passwordIcon}\n                                    onClick={() => setIsPasswordShown(!isPasswordShown)}\n                                >\n                                    {isPasswordShown ? <BsEyeSlash /> : <BsEye />}\n                                </i>\n                            </div>\n                        </Form.Group>\n\n                        <p className={styles.massgeErr}> {errorMsg}</p>\n                        <div className=\"d-grid gap-2\">\n                            <Button className=\"shadow mt-5 btn-md\" variant=\"secondary\" type=\"submit\">\n                                Register\n                            </Button>\n                        </div>\n                    </Form >\n\n                    <>\n\n                    </>\n                </div>\n            </div >\n        </div >\n\n    )\n\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}